package jlib;
  /**
    * this file is automatically generated by the jscheme->javac compiler Compiler.scm. 
    * Modify at your own risk!
    */
  import jsint.*;
  import java.lang.reflect.*;
  import java.util.*;
  
  
  public class JLIB extends jsint.Procedure implements jsint.Function,  Runnable {  
      public int whichcode=0;  // corresponds to a numbering of the toplevel procedures of the program
      public int whichtype=0;  // 0 = user defined procedure, 1 = java literal
      public static final int USER_DEF=0, JAVA_LIT=1;
      public Pair frame;
      public DynamicEnvironment dynEnv;

      public JLIB() {
          super();
          dynEnv=Scheme.getInteractionEnvironment();
      }
      public JLIB(int t, int n, Pair f) {
          whichtype = t;
          whichcode = n;
          frame = f;
          dynEnv = Scheme.getInteractionEnvironment();
      }
      public JLIB(int t, int n, Pair f, DynamicEnvironment d) {
          whichtype = t;
          whichcode = n;
          frame = f;
          dynEnv = d;
      }
  
      private Boolean addImport(String s) {
         jsint.Import.addImport(s);
         return Boolean.TRUE;
      }
  
      public void run() {
        this.invoke(null);
      } 
  
      public Object[] makeArgArray(jsint.Pair args) {
         return new Object[]{args};
      }

      public Object apply(Object[] args) {
      return invoke((Pair)args[0]);
      }
  
      public Object apply(Pair args) {
        return invoke(args);
      }
  
      public Object invoke(Pair args)
      {
        return LCO.eval(invoke1(args));
      }
  
    static Object tmp;
  
  
    public static void load() { 
      new JLIB().init();
    }

    public static void load(String shellArgs[]) {
       Scheme.getInteractionEnvironment().setValue(Symbol.intern("shellArgs"), shellArgs);
       load();
    }

    public static void main(String shellArgs[]) {
       Symbol main = jsint.Symbol.intern("main");
       load(shellArgs);
       if (main.isDefined())
          {
             DynamicEnvironment dynEnv = Scheme.getInteractionEnvironment();
             ((jsint.Procedure) (dynEnv.getValue(main))).apply(new Pair(shellArgs,Pair.EMPTY));
          }
     }

      public Object invoke1(Pair args) {
      if (whichtype == USER_DEF) {
       switch (whichcode) {
          case 0: return(_L0(args)); 
          case 1: return(_L1(args)); 
          case 2: return(_L2(args)); 
          case 3: return(_L3(args)); 
          case 4: return(_L4(args)); 
          case 5: return(_L5(args)); 
          case 6: return(_L6(args)); 
          case 7: return(_L7(args)); 
          case 8: return(_L8(args)); 
          case 9: return(_L9(args)); 
          case 10: return(_L10(args)); 
          case 11: return(_L11(args)); 
          case 12: return(_L12(args)); 
          case 13: return(_L13(args)); 
          case 14: return(_L14(args)); 
          case 15: return(_L15(args)); 
          case 16: return(_L16(args)); 
          case 17: return(_L17(args)); 
          case 18: return(_L18(args)); 
          case 19: return(_L19(args)); 
          case 20: return(_L20(args)); 
          case 21: return(_L21(args)); 
          case 22: return(_L22(args)); 
          case 23: return(_L23(args)); 
          case 24: return(_L24(args)); 
          case 25: return(_L25(args)); 
          case 26: return(_L26(args)); 
          case 27: return(_L27(args)); 
          case 28: return(_L28(args)); 
          case 29: return(_L29(args)); 
          case 30: return(_L30(args)); 
          case 31: return(_L31(args)); 
          case 32: return(_L32(args)); 
          case 33: return(_L33(args)); 
          case 34: return(_L34(args)); 
          case 35: return(_L35(args)); 
          case 36: return(_L36(args)); 
          case 37: return(_L37(args)); 
          case 38: return(_L38(args)); 
          case 39: return(_L39(args)); 
          case 40: return(_L40(args)); 
          case 41: return(_L41(args)); 
          case 42: return(_L42(args)); 
          case 43: return(_L43(args)); 
          case 44: return(_L44(args)); 
          case 45: return(_L45(args)); 
          case 46: return(_L46(args)); 
          case 47: return(_L47(args)); 
          case 48: return(_L48(args)); 
          case 49: return(_L49(args)); 
          case 50: return(_L50(args)); 
          case 51: return(_L51(args)); 
          case 52: return(_L52(args)); 
          case 53: return(_L53(args)); 
          case 54: return(_L54(args)); 
          case 55: return(_L55(args)); 
          case 56: return(_L56(args)); 
          case 57: return(_L57(args)); 
          case 58: return(_L58(args)); 
          case 59: return(_L59(args)); 
          case 60: return(_L60(args)); 
          case 61: return(_L61(args)); 
          case 62: return(_L62(args)); 
          case 63: return(_L63(args)); 
          case 64: return(_L64(args)); 
          case 65: return(_L65(args)); 
          case 66: return(_L66(args)); 
          case 67: return(_L67(args)); 
          case 68: return(_L68(args)); 
          case 69: return(_L69(args)); 
          case 70: return(_L70(args)); 
          case 71: return(_L71(args)); 
          case 72: return(_L72(args)); 
          case 73: return(_L73(args)); 
          case 74: return(_L74(args)); 
          case 75: return(_L75(args)); 
          case 76: return(_L76(args)); 
          case 77: return(_L77(args)); 
          case 78: return(_L78(args)); 
          case 79: return(_L79(args)); 
          case 80: return(_L80(args)); 
          case 81: return(_L81(args)); 
          case 82: return(_L82(args)); 
          case 83: return(_L83(args)); 
          case 84: return(_L84(args)); 
          case 85: return(_L85(args)); 
          case 86: return(_L86(args)); 
          case 87: return(_L87(args)); 
          case 88: return(_L88(args)); 
          case 89: return(_L89(args)); 
          case 90: return(_L90(args)); 
          case 91: return(_L91(args)); 
          case 92: return(_L92(args)); 
          case 93: return(_L93(args)); 
          case 94: return(_L94(args)); 
          case 95: return(_L95(args)); 
          case 96: return(_L96(args)); 
          case 97: return(_L97(args)); 
          case 98: return(_L98(args)); 
          case 99: return(_L99(args)); 
          case 100: return(_L100(args)); 
          case 101: return(_L101(args)); 
          case 102: return(_L102(args)); 
          case 103: return(_L103(args)); 
          case 104: return(_L104(args)); 
          case 105: return(_L105(args)); 
          case 106: return(_L106(args)); 
          case 107: return(_L107(args)); 
          case 108: return(_L108(args)); 
          case 109: return(_L109(args)); 
          case 110: return(_L110(args)); 
          case 111: return(_L111(args)); 
          case 112: return(_L112(args)); 
          case 113: return(_L113(args)); 
          case 114: return(_L114(args)); 
          case 115: return(_L115(args)); 
          case 116: return(_L116(args)); 
          case 117: return(_L117(args)); 
          case 118: return(_L118(args)); 
          case 119: return(_L119(args)); 
          case 120: return(_L120(args)); 
          case 121: return(_L121(args)); 
          case 122: return(_L122(args)); 
          case 123: return(_L123(args)); 
          case 124: return(_L124(args)); 
          case 125: return(_L125(args)); 

         default:  break;
       }}
      else {
       switch (whichcode) {
          case 0: return(_J0(args)); 
          case 1: return(_J1(args)); 
          case 2: return(_J2(args)); 
          case 3: return(_J3(args)); 
          case 4: return(_J4(args)); 
          case 5: return(_J5(args)); 
          case 6: return(_J6(args)); 
          case 7: return(_J7(args)); 
          case 8: return(_J8(args)); 
          case 9: return(_J9(args)); 
          case 10: return(_J10(args)); 
          case 11: return(_J11(args)); 
          case 12: return(_J12(args)); 
          case 13: return(_J13(args)); 
          case 14: return(_J14(args)); 
          case 15: return(_J15(args)); 
          case 16: return(_J16(args)); 
          case 17: return(_J17(args)); 
          case 18: return(_J18(args)); 
          case 19: return(_J19(args)); 
          case 20: return(_J20(args)); 
          case 21: return(_J21(args)); 
          case 22: return(_J22(args)); 
          case 23: return(_J23(args)); 
          case 24: return(_J24(args)); 
          case 25: return(_J25(args)); 
          case 26: return(_J26(args)); 
          case 27: return(_J27(args)); 
          case 28: return(_J28(args)); 
          case 29: return(_J29(args)); 
          case 30: return(_J30(args)); 
          case 31: return(_J31(args)); 
          case 32: return(_J32(args)); 
          case 33: return(_J33(args)); 
          case 34: return(_J34(args)); 
          case 35: return(_J35(args)); 
          case 36: return(_J36(args)); 
          case 37: return(_J37(args)); 
          case 38: return(_J38(args)); 
          case 39: return(_J39(args)); 
          case 40: return(_J40(args)); 
          case 41: return(_J41(args)); 
          case 42: return(_J42(args)); 
          case 43: return(_J43(args)); 
          case 44: return(_J44(args)); 
          case 45: return(_J45(args)); 
          case 46: return(_J46(args)); 
          case 47: return(_J47(args)); 
          case 48: return(_J48(args)); 
          case 49: return(_J49(args)); 
          case 50: return(_J50(args)); 
          case 51: return(_J51(args)); 
          case 52: return(_J52(args)); 
          case 53: return(_J53(args)); 
          case 54: return(_J54(args)); 
          case 55: return(_J55(args)); 
          case 56: return(_J56(args)); 
          case 57: return(_J57(args)); 
          case 58: return(_J58(args)); 
          case 59: return(_J59(args)); 
          case 60: return(_J60(args)); 
          case 61: return(_J61(args)); 
          case 62: return(_J62(args)); 
          case 63: return(_J63(args)); 
          case 64: return(_J64(args)); 
          case 65: return(_J65(args)); 
          case 66: return(_J66(args)); 
          case 67: return(_J67(args)); 
          case 68: return(_J68(args)); 
          case 69: return(_J69(args)); 
          case 70: return(_J70(args)); 
          case 71: return(_J71(args)); 
          case 72: return(_J72(args)); 
          case 73: return(_J73(args)); 
          case 74: return(_J74(args)); 
          case 75: return(_J75(args)); 
          case 76: return(_J76(args)); 
          case 77: return(_J77(args)); 
          case 78: return(_J78(args)); 
          case 79: return(_J79(args)); 
          case 80: return(_J80(args)); 
          case 81: return(_J81(args)); 
          case 82: return(_J82(args)); 
          case 83: return(_J83(args)); 
          case 84: return(_J84(args)); 
          case 85: return(_J85(args)); 
          case 86: return(_J86(args)); 
          case 87: return(_J87(args)); 
          case 88: return(_J88(args)); 
          case 89: return(_J89(args)); 
          case 90: return(_J90(args)); 
          case 91: return(_J91(args)); 
          case 92: return(_J92(args)); 
          case 93: return(_J93(args)); 
          case 94: return(_J94(args)); 
          case 95: return(_J95(args)); 
          case 96: return(_J96(args)); 
          case 97: return(_J97(args)); 
          case 98: return(_J98(args)); 
          case 99: return(_J99(args)); 
          case 100: return(_J100(args)); 
          case 101: return(_J101(args)); 
          case 102: return(_J102(args)); 
          case 103: return(_J103(args)); 
          case 104: return(_J104(args)); 
          case 105: return(_J105(args)); 
          case 106: return(_J106(args)); 
          case 107: return(_J107(args)); 
          case 108: return(_J108(args)); 
          case 109: return(_J109(args)); 
          case 110: return(_J110(args)); 
          case 111: return(_J111(args)); 
          case 112: return(_J112(args)); 
          case 113: return(_J113(args)); 
          case 114: return(_J114(args)); 
          case 115: return(_J115(args)); 
          case 116: return(_J116(args)); 
          case 117: return(_J117(args)); 
          case 118: return(_J118(args)); 
          case 119: return(_J119(args)); 
          case 120: return(_J120(args)); 
          case 121: return(_J121(args)); 
          case 122: return(_J122(args)); 
          case 123: return(_J123(args)); 
          case 124: return(_J124(args)); 
          case 125: return(_J125(args)); 
          case 126: return(_J126(args)); 
          case 127: return(_J127(args)); 
          case 128: return(_J128(args)); 
          case 129: return(_J129(args)); 
          case 130: return(_J130(args)); 
          case 131: return(_J131(args)); 
          case 132: return(_J132(args)); 
          case 133: return(_J133(args)); 
          case 134: return(_J134(args)); 
          case 135: return(_J135(args)); 
          case 136: return(_J136(args)); 
          case 137: return(_J137(args)); 
          case 138: return(_J138(args)); 
          case 139: return(_J139(args)); 
          case 140: return(_J140(args)); 
          case 141: return(_J141(args)); 
          case 142: return(_J142(args)); 
          case 143: return(_J143(args)); 
          case 144: return(_J144(args)); 
          case 145: return(_J145(args)); 
          case 146: return(_J146(args)); 
          case 147: return(_J147(args)); 
          case 148: return(_J148(args)); 
          case 149: return(_J149(args)); 
          case 150: return(_J150(args)); 
          case 151: return(_J151(args)); 

         default:  break;
       }}



      return null;
      }


  
   public void init() {
     Pair Args = null;
     dynEnv.setValue(Symbol.intern("this"), this);
     Class _p = Primitive.class; // this loads the primitives
((jsint.Procedure) _J0/* jscheme.REPL.eval */).apply(new Pair(_C0,
    Pair.EMPTY));

dynEnv.setValue(Symbol.intern("processConArgs"), new JLIB(USER_DEF, 5, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("button"), new JLIB(USER_DEF, 7, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("choice"), new JLIB(USER_DEF, 9, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("label"), new JLIB(USER_DEF, 11, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("textfield"), new JLIB(USER_DEF, 13, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("textarea"), new JLIB(USER_DEF, 15, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("textarea"), new JLIB(USER_DEF, 17, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("imagecanvas"), ((jsint.Procedure) new JLIB(USER_DEF, 23, new Pair( Args, this.frame), dynEnv)).apply(new Pair(((jsint.Procedure) _J56/* java.awt.Canvas. */).apply(Pair.EMPTY),
    Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("canvas"), new JLIB(USER_DEF, 25, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("image"), new JLIB(USER_DEF, 26, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("window"), new JLIB(USER_DEF, 29, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("checkboxgroup"), _J65/* java.awt.CheckboxGroup. */);

dynEnv.setValue(Symbol.intern("checkboxmenuitem"), new JLIB(USER_DEF, 31, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("menuitem"), new JLIB(USER_DEF, 33, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("menu"), new JLIB(USER_DEF, 36, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("menubar"), new JLIB(USER_DEF, 38, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("readstring"), new JLIB(USER_DEF, 39, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("writeOneString"), new JLIB(USER_DEF, 40, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("writeexpr"), new JLIB(USER_DEF, 41, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("writelnexpr"), new JLIB(USER_DEF, 42, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("appendexpr"), new JLIB(USER_DEF, 44, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("appendlnexpr"), new JLIB(USER_DEF, 45, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("readexpr"), new JLIB(USER_DEF, 46, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("readexprlist"), new JLIB(USER_DEF, 47, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("writestring"), dynEnv.getValue((Symbol)writeexpr));

dynEnv.setValue(Symbol.intern("writelnstring"), dynEnv.getValue((Symbol)writelnexpr));

dynEnv.setValue(Symbol.intern("appendstring"), dynEnv.getValue((Symbol)appendexpr));

dynEnv.setValue(Symbol.intern("appendlnstring"), dynEnv.getValue((Symbol)appendexpr));

dynEnv.setValue(Symbol.intern("expr->string"), _J81/* jsint.U.stringify */);

dynEnv.setValue(Symbol.intern("string->expr"), new JLIB(USER_DEF, 48, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("string->exprlist"), new JLIB(USER_DEF, 52, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("center"), new JLIB(USER_DEF, 53, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("north"), new JLIB(USER_DEF, 54, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("south"), new JLIB(USER_DEF, 55, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("east"), new JLIB(USER_DEF, 56, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("west"), new JLIB(USER_DEF, 57, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("border"), new JLIB(USER_DEF, 62, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("grid"), new JLIB(USER_DEF, 64, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("gbc-constraint"), new JLIB(USER_DEF, 65, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("processGBCarg"), new JLIB(USER_DEF, 67, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("processSymbol"), new JLIB(USER_DEF, 69, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("box"), new JLIB(USER_DEF, 85, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("row"), new JLIB(USER_DEF, 86, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("table"), new JLIB(USER_DEF, 87, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("tablebyrow"), new JLIB(USER_DEF, 88, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("col"), new JLIB(USER_DEF, 89, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("tablebycol"), new JLIB(USER_DEF, 90, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("splitrow"), new JLIB(USER_DEF, 92, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("splitcol"), new JLIB(USER_DEF, 94, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("cards"), new JLIB(USER_DEF, 96, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("card"), new JLIB(USER_DEF, 98, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("showcard"), new JLIB(USER_DEF, 100, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("Courier"), new JLIB(USER_DEF, 101, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("CourierPlain"), new JLIB(USER_DEF, 102, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("CourierBold"), new JLIB(USER_DEF, 103, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("CourierItalic"), new JLIB(USER_DEF, 104, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("TimesRoman"), new JLIB(USER_DEF, 105, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("TimesRomanPlain"), new JLIB(USER_DEF, 106, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("TimesRomanBold"), new JLIB(USER_DEF, 107, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("TimesRomanItalic"), new JLIB(USER_DEF, 108, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("Helvetica"), new JLIB(USER_DEF, 109, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("HelveticaPlain"), new JLIB(USER_DEF, 110, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("HelveticaBold"), new JLIB(USER_DEF, 111, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("HelveticaItalic"), new JLIB(USER_DEF, 112, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("white"), (((jsint.Procedure)_J128/* java.awt.Color.white$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("lightGray"), (((jsint.Procedure)_J129/* java.awt.Color.lightGray$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("gray"), (((jsint.Procedure)_J130/* java.awt.Color.gray$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("darkGray"), (((jsint.Procedure)_J131/* java.awt.Color.darkGray$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("black"), (((jsint.Procedure)_J132/* java.awt.Color.black$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("red"), (((jsint.Procedure)_J133/* java.awt.Color.red$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("pink"), (((jsint.Procedure)_J134/* java.awt.Color.pink$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("orange"), (((jsint.Procedure)_J135/* java.awt.Color.orange$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("yellow"), (((jsint.Procedure)_J136/* java.awt.Color.yellow$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("green"), (((jsint.Procedure)_J137/* java.awt.Color.green$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("magenta"), (((jsint.Procedure)_J138/* java.awt.Color.magenta$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("cyan"), (((jsint.Procedure)_J139/* java.awt.Color.cyan$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("blue"), (((jsint.Procedure)_J140/* java.awt.Color.blue$ */).apply(jsint.Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("color"), _J141/* java.awt.Color. */);

dynEnv.setValue(Symbol.intern("size"), new JLIB(USER_DEF, 113, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("maketagger"), new JLIB(USER_DEF, 118, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("actionerrortextarea"), ((jsint.Procedure) dynEnv.getValue((Symbol)textarea)).apply(new Pair(_C8,
    new Pair(_C60,
    new Pair(dynEnv.getValue((Symbol)white),
    Pair.EMPTY)))));

dynEnv.setValue(Symbol.intern("actionerrorwindow"), ((jsint.Procedure) new JLIB(USER_DEF, 119, new Pair( Args, this.frame), dynEnv)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)window)).apply(new Pair(_C61,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)border)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)north)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)label)).apply(new Pair(_C62,
    new Pair(dynEnv.getValue((Symbol)green),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)HelveticaBold)).apply(new Pair(_C63,
    Pair.EMPTY)),
    Pair.EMPTY)))),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)center)).apply(new Pair(dynEnv.getValue((Symbol)actionerrortextarea),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)south)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)button)).apply(new Pair(_C64,
    new Pair(((jsint.Procedure) _J58/* jsint.Listener11. */).apply(new Pair(new JLIB(USER_DEF, 120, new Pair( Args, this.frame), dynEnv),
    Pair.EMPTY)),
    Pair.EMPTY))),
    Pair.EMPTY)),
    Pair.EMPTY)))),
    Pair.EMPTY))),
    Pair.EMPTY)));

dynEnv.setValue(Symbol.intern("error"), new JLIB(USER_DEF, 121, new Pair( Args, this.frame), dynEnv));

dynEnv.setValue(Symbol.intern("action"), new JLIB(USER_DEF, 125, new Pair( Args, this.frame), dynEnv));

((jsint.Procedure)_J151/* jsint.BacktraceException.printJavaTrace$ */).apply( new Pair(_C2,Pair.EMPTY));

  
   }

 // definitions of global variables 
public static final Object processConArgs = Symbol.intern("processConArgs");

public static final Object button = Symbol.intern("button");

public static final Object choice = Symbol.intern("choice");

public static final Object label = Symbol.intern("label");

public static final Object textfield = Symbol.intern("textfield");

public static final Object textarea = Symbol.intern("textarea");

public static final Object imagecanvas = Symbol.intern("imagecanvas");

public static final Object canvas = Symbol.intern("canvas");

public static final Object image = Symbol.intern("image");

public static final Object window = Symbol.intern("window");

public static final Object checkboxgroup = Symbol.intern("checkboxgroup");

public static final Object checkboxmenuitem = Symbol.intern("checkboxmenuitem");

public static final Object menuitem = Symbol.intern("menuitem");

public static final Object menu = Symbol.intern("menu");

public static final Object menubar = Symbol.intern("menubar");

public static final Object readstring = Symbol.intern("readstring");

public static final Object writeOneString = Symbol.intern("writeOneString");

public static final Object writeexpr = Symbol.intern("writeexpr");

public static final Object writelnexpr = Symbol.intern("writelnexpr");

public static final Object appendexpr = Symbol.intern("appendexpr");

public static final Object appendlnexpr = Symbol.intern("appendlnexpr");

public static final Object readexpr = Symbol.intern("readexpr");

public static final Object readexprlist = Symbol.intern("readexprlist");

public static final Object writelnstring = Symbol.intern("writelnstring");

public static final Object appendstring = Symbol.intern("appendstring");

public static final Object appendlnstring = Symbol.intern("appendlnstring");

public static final Object expr_45__62_string = Symbol.intern("expr->string");

public static final Object center = Symbol.intern("center");

public static final Object north = Symbol.intern("north");

public static final Object south = Symbol.intern("south");

public static final Object east = Symbol.intern("east");

public static final Object west = Symbol.intern("west");

public static final Object border = Symbol.intern("border");

public static final Object grid = Symbol.intern("grid");

public static final Object gbc_45_constraint = Symbol.intern("gbc-constraint");

public static final Object processGBCarg = Symbol.intern("processGBCarg");

public static final Object box = Symbol.intern("box");

public static final Object row = Symbol.intern("row");

public static final Object table = Symbol.intern("table");

public static final Object tablebyrow = Symbol.intern("tablebyrow");

public static final Object col = Symbol.intern("col");

public static final Object tablebycol = Symbol.intern("tablebycol");

public static final Object splitrow = Symbol.intern("splitrow");

public static final Object splitcol = Symbol.intern("splitcol");

public static final Object cards = Symbol.intern("cards");

public static final Object card = Symbol.intern("card");

public static final Object showcard = Symbol.intern("showcard");

public static final Object Courier = Symbol.intern("Courier");

public static final Object CourierPlain = Symbol.intern("CourierPlain");

public static final Object CourierBold = Symbol.intern("CourierBold");

public static final Object CourierItalic = Symbol.intern("CourierItalic");

public static final Object TimesRoman = Symbol.intern("TimesRoman");

public static final Object TimesRomanPlain = Symbol.intern("TimesRomanPlain");

public static final Object TimesRomanBold = Symbol.intern("TimesRomanBold");

public static final Object TimesRomanItalic = Symbol.intern("TimesRomanItalic");

public static final Object Helvetica = Symbol.intern("Helvetica");

public static final Object HelveticaPlain = Symbol.intern("HelveticaPlain");

public static final Object HelveticaBold = Symbol.intern("HelveticaBold");

public static final Object HelveticaItalic = Symbol.intern("HelveticaItalic");

public static final Object white = Symbol.intern("white");

public static final Object lightGray = Symbol.intern("lightGray");

public static final Object gray = Symbol.intern("gray");

public static final Object darkGray = Symbol.intern("darkGray");

public static final Object black = Symbol.intern("black");

public static final Object red = Symbol.intern("red");

public static final Object pink = Symbol.intern("pink");

public static final Object orange = Symbol.intern("orange");

public static final Object yellow = Symbol.intern("yellow");

public static final Object green = Symbol.intern("green");

public static final Object magenta = Symbol.intern("magenta");

public static final Object cyan = Symbol.intern("cyan");

public static final Object blue = Symbol.intern("blue");

public static final Object color = Symbol.intern("color");

public static final Object size = Symbol.intern("size");

public static final Object maketagger = Symbol.intern("maketagger");

public static final Object actionerrortextarea = Symbol.intern("actionerrortextarea");

public static final Object actionerrorwindow = Symbol.intern("actionerrorwindow");

public static final Object action = Symbol.intern("action");


 // definitions of Scheme variables defined externally
   static Object writestring= Symbol.intern("writestring");

   static Object first= Symbol.intern("first");

   static Object second= Symbol.intern("second");

   static Object error= Symbol.intern("error");

   static Object list= Symbol.intern("list");

   static Object for_45_each= Symbol.intern("for-each");

   static Object _62__61_= Symbol.intern(">=");

   static Object length= Symbol.intern("length");

   static Object integer_63_= Symbol.intern("integer?");

   static Object apply= Symbol.intern("apply");

   static Object cons= Symbol.intern("cons");

   static Object rest= Symbol.intern("rest");

   static Object applet= Symbol.intern("applet");

   static Object equal_63_= Symbol.intern("equal?");

   static Object map= Symbol.intern("map");

   static Object string_45_append= Symbol.intern("string-append");

   static Object append= Symbol.intern("append");

   static Object string_45__62_expr= Symbol.intern("string->expr");

   static Object string_45__62_exprlist= Symbol.intern("string->exprlist");

   static Object read= Symbol.intern("read");

   static Object eof_45_object_63_= Symbol.intern("eof-object?");

   static Object pair_63_= Symbol.intern("pair?");

   static Object member= Symbol.intern("member");

   static Object processSymbol= Symbol.intern("processSymbol");

   static Object processPair= Symbol.intern("processPair");

   static Object A= Symbol.intern("A");

   static Object null_63_= Symbol.intern("null?");

   static Object _43_= Symbol.intern("+");

   static Object _61_= Symbol.intern("=");

   static Object _throw= Symbol.intern("throw");

   static Object eq_63_= Symbol.intern("eq?");

   static Object cdr= Symbol.intern("cdr");


 // definitions of quoted terms 
   static Object _C0=new Pair(Symbol.intern( "define-macro"),new Pair(new Pair(Symbol.intern( "class-case"),new Pair(Symbol.intern( "varlist"),Symbol.intern( "clauses"))),new Pair(new Pair(Symbol.intern( "define"),new Pair(new Pair(Symbol.intern( "runtimeClassName"),new Pair(Symbol.intern( "c"),Pair.EMPTY)),new Pair(new Pair(Symbol.intern( "string->symbol"),new Pair(new Pair(Symbol.intern( "string-append"),new Pair(new Pair(Symbol.intern( ".getName"),new Pair(new Pair(Symbol.intern( "class"),new Pair(Symbol.intern( "c"),Pair.EMPTY)),Pair.EMPTY)),new Pair(".class",Pair.EMPTY))),Pair.EMPTY)),Pair.EMPTY))),new Pair(new Pair(Symbol.intern( "define"),new Pair(new Pair(Symbol.intern( "instanceof"),new Pair(Symbol.intern( "v"),new Pair(Symbol.intern( "c"),Pair.EMPTY))),new Pair(new Pair(Symbol.intern( "quasiquote"),new Pair(new Pair(Symbol.intern( ".isInstance"),new Pair(new Pair(Symbol.intern( "unquote"),new Pair(new Pair(Symbol.intern( "runtimeClassName"),new Pair(Symbol.intern( "c"),Pair.EMPTY)),Pair.EMPTY)),new Pair(new Pair(Symbol.intern( "unquote"),new Pair(Symbol.intern( "v"),Pair.EMPTY)),Pair.EMPTY))),Pair.EMPTY)),Pair.EMPTY))),new Pair(new Pair(Symbol.intern( "quasiquote"),new Pair(new Pair(Symbol.intern( "cond"),new Pair(new Pair(Symbol.intern( "unquote-splicing"),new Pair(new Pair(Symbol.intern( "map"),new Pair(new Pair(Symbol.intern( "lambda"),new Pair(new Pair(Symbol.intern( "clause"),Pair.EMPTY),new Pair(new Pair(Symbol.intern( "if"),new Pair(new Pair(Symbol.intern( "equal?"),new Pair(new Pair(Symbol.intern( "first"),new Pair(Symbol.intern( "clause"),Pair.EMPTY)),new Pair(new Pair(Symbol.intern( "quote"),new Pair(Symbol.intern( "else"),Pair.EMPTY)),Pair.EMPTY))),new Pair(Symbol.intern( "clause"),new Pair(new Pair(Symbol.intern( "quasiquote"),new Pair(new Pair(new Pair(Symbol.intern( "and"),new Pair(new Pair(Symbol.intern( "unquote-splicing"),new Pair(new Pair(Symbol.intern( "map"),new Pair(Symbol.intern( "instanceof"),new Pair(Symbol.intern( "varlist"),new Pair(new Pair(Symbol.intern( "first"),new Pair(Symbol.intern( "clause"),Pair.EMPTY)),Pair.EMPTY)))),Pair.EMPTY)),Pair.EMPTY)),new Pair(new Pair(Symbol.intern( "unquote-splicing"),new Pair(new Pair(Symbol.intern( "rest"),new Pair(Symbol.intern( "clause"),Pair.EMPTY)),Pair.EMPTY)),Pair.EMPTY)),Pair.EMPTY)),Pair.EMPTY)))),Pair.EMPTY))),new Pair(Symbol.intern( "clauses"),Pair.EMPTY))),Pair.EMPTY)),Pair.EMPTY)),Pair.EMPTY)),Pair.EMPTY)))));

   static Object _C1=Boolean.TRUE;

   static Object _C2=Boolean.FALSE;

   static Object _C3=new   Integer(0);

   static Object _C4="don't know how to process arg ";

   static Object _C5=" of component ";

   static Object _C6=Pair.EMPTY;

   static Object _C7="";

   static Object _C8=new   Integer(20);

   static Object _C9=new   Integer(2);

   static Object _C10=new   Integer(10);

   static Object _C11=new   Integer(50);

   static Object _C12=new   Integer(1);

   static Object _C13=null;

   static Object _C14="\n";

   static Object _C15="Center";

   static Object _C16="North";

   static Object _C17="South";

   static Object _C18="East";

   static Object _C19="West";

   static Object _C20=new Pair("Center",new Pair("North",new Pair("South",new Pair("East",new Pair("West",Pair.EMPTY)))));

   static Object _C21="Expected Center, North, South, East, or West ";

   static Object _C22="unrecognized box element ";

   static Object _C23=new Pair(Symbol.intern( "both"),Pair.EMPTY);

   static Object _C24=new Pair(Symbol.intern( "none"),Pair.EMPTY);

   static Object _C25=new Pair(Symbol.intern( "horizontal"),Pair.EMPTY);

   static Object _C26=new Pair(Symbol.intern( "vertical"),Pair.EMPTY);

   static Object _C27=new Pair(Symbol.intern( "north"),Pair.EMPTY);

   static Object _C28=new Pair(Symbol.intern( "northeast"),Pair.EMPTY);

   static Object _C29=new Pair(Symbol.intern( "northwest"),Pair.EMPTY);

   static Object _C30=new Pair(Symbol.intern( "south"),Pair.EMPTY);

   static Object _C31=new Pair(Symbol.intern( "southeast"),Pair.EMPTY);

   static Object _C32=new Pair(Symbol.intern( "southwest"),Pair.EMPTY);

   static Object _C33=new Pair(Symbol.intern( "center"),Pair.EMPTY);

   static Object _C34=new Pair(Symbol.intern( "east"),Pair.EMPTY);

   static Object _C35=new Pair(Symbol.intern( "west"),Pair.EMPTY);

   static Object _C36="Unknown box attribute";

   static Object _C37=new Pair(Symbol.intern( "fill"),Pair.EMPTY);

   static Object _C38=new Pair(Symbol.intern( "anchor"),Pair.EMPTY);

   static Object _C39=new Pair(Symbol.intern( "weightx"),Pair.EMPTY);

   static Object _C40=new Pair(Symbol.intern( "weighty"),Pair.EMPTY);

   static Object _C41=Symbol.intern( "cols");

   static Object _C42=Symbol.intern( "row");

   static Object _C43=new    Double(1.0);

   static Object _C44=new Pair(Symbol.intern( "rows"),new Pair(Symbol.intern( "cols"),Pair.EMPTY));

   static Object _C45=new Pair(Symbol.intern( "row"),new Pair(Symbol.intern( "col"),Pair.EMPTY));

   static Object _C46="ERROR in call to ";

   static Object _C47=Symbol.intern( "box");

   static Object _C48=Symbol.intern( "rows");

   static Object _C49=Symbol.intern( "col");

   static Object _C50=new Pair(Symbol.intern( "first"),Pair.EMPTY);

   static Object _C51=new Pair(Symbol.intern( "last"),Pair.EMPTY);

   static Object _C52=new Pair(Symbol.intern( "next"),Pair.EMPTY);

   static Object _C53=new Pair(Symbol.intern( "previous"),Pair.EMPTY);

   static Object _C54="Courier";

   static Object _C55="TimesRoman";

   static Object _C56="Helvetica";

   static Object _C57="undefined tag ";

   static Object _C58="improper use of \"tag\": ";

   static Object _C59=Symbol.intern( "tag");

   static Object _C60=new   Integer(80);

   static Object _C61="ERROR";

   static Object _C62="ERRORS generated during event handling";

   static Object _C63=new   Integer(24);

   static Object _C64="clear";

   static Object _C65="JLIB USAGE ERROR:";

   static Object _C66="\n\nERROR in Action in reponse to an AWT event";

   static Object _C67=" is ";


 // definitions of embedded lambdas 
 Object _L0(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J12/* .setRows */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)),
    Pair.EMPTY)));

tmp = new LCO(_J9/* .setColumns */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)second)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L1(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J22/* .setSize */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(((jsint.Procedure) _J23/* .getWidth */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY))),
    new Pair(((jsint.Procedure) _J24/* .getHeight */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY))),
    Pair.EMPTY))));

tmp = new LCO(_J25/* .drawImage */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair(_C3,
    new Pair(_C3,
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY))))));


   return tmp; 
}

 Object _L2(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J2/* java.awt.Frame.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J3/* java.lang.String.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J5/* java.awt.MenuComponent.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J3/* java.lang.String.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J3/* java.lang.String.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J7/* java.awt.TextField.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J8/* java.lang.Integer.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J10/* java.awt.TextArea.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J11/* jsint.Pair.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J2/* java.awt.Frame.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J13/* java.awt.MenuBar.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J15/* java.awt.Container.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J16/* java.awt.LayoutManager.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J15/* java.awt.Container.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J19/* jlib.SchemeCanvas.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J20/* java.awt.Image.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J26/* java.awt.Button.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J27/* jsint.JavaListener.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J7/* java.awt.TextField.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J27/* jsint.JavaListener.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J29/* java.awt.Choice.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J27/* jsint.JavaListener.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J31/* java.awt.Checkbox.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J27/* jsint.JavaListener.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J32/* java.awt.MenuItem.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J27/* jsint.JavaListener.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J33/* java.awt.CheckboxMenuItem.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J27/* jsint.JavaListener.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J5/* java.awt.MenuComponent.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J34/* java.awt.Color.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J5/* java.awt.MenuComponent.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J36/* jsint.Procedure.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J5/* java.awt.MenuComponent.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J37/* java.awt.Font.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J13/* java.awt.MenuBar.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J39/* java.awt.Menu.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J39/* java.awt.Menu.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J5/* java.awt.MenuComponent.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J34/* java.awt.Color.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J36/* jsint.Procedure.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J37/* java.awt.Font.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J40/* java.awt.Dimension.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J41/* java.lang.Object.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J41/* java.lang.Object.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  _C6
  :
  new LCO(dynEnv.getValue((Symbol)error),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C4,
    new Pair((( Pair) Args).getEltNover2(3),
    new Pair(((jsint.Procedure) _J42/* .getClass */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    new Pair(_C5,
    new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J42/* .getClass */).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY))))))),
    Pair.EMPTY))
  )
  :
  new LCO(_J22/* .setSize */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J38/* .setFont */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO((( Pair) Args).getEltNover2(3),new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J35/* .setBackground */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J18/* .add */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J18/* .add */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J38/* .setFont */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO((( Pair) Args).getEltNover2(3),new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J35/* .setBackground */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J30/* .addItemListener */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J28/* .addActionListener */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J30/* .addItemListener */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J30/* .addItemListener */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J28/* .addActionListener */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J28/* .addActionListener */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J21/* .paintHandler$ */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(new JLIB(USER_DEF, 1, new Pair( Args, this.frame), dynEnv),
    Pair.EMPTY)))
  )
  :
  new LCO(_J18/* .add */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J17/* .setLayoutManager */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J14/* .setMenuBar */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(new JLIB(USER_DEF, 0, new Pair( Args, this.frame), dynEnv),Pair.EMPTY)
  )
  :
  new LCO(_J9/* .setColumns */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(dynEnv.getValue((Symbol)writestring),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(dynEnv.getValue((Symbol)writestring),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J4/* .setTitle */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  );


   return tmp; 
}

 Object _L3(Pair Args){
   Object tmp=null; 
 tmp = new LCO((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L4(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,new JLIB(USER_DEF, 2, new Pair( Args, this.frame), dynEnv));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)for_45_each)).apply(new Pair(new JLIB(USER_DEF, 3, new Pair( Args, this.frame), dynEnv),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)));

tmp = (((Pair) ((this.frame).nth(0 ))).getEltNover2(1));


   return tmp; 
}

 Object _L5(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 4, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    Pair.EMPTY));


   return tmp; 
}

 Object _L6(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L7(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 6, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J43/* java.awt.Button. */).apply(new Pair(_C7,
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L8(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L9(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 8, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J44/* java.awt.Choice. */).apply(Pair.EMPTY),
    Pair.EMPTY));


   return tmp; 
}

 Object _L10(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L11(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 10, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J45/* java.awt.Label. */).apply(new Pair(_C7,
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L12(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L13(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 12, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J46/* java.awt.TextField. */).apply(new Pair(_C7,
    new Pair(_C8,
    Pair.EMPTY))),
    Pair.EMPTY));


   return tmp; 
}

 Object _L14(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(4)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L15(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 14, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J47/* java.awt.TextArea. */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))),
    Pair.EMPTY));


   return tmp; 
}

 Object _L16(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L17(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)_62__61_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)length)).apply(new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY)),
    new Pair(_C9,
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)integer_63_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY)),
    Pair.EMPTY)))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)integer_63_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)second)).apply(new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY)),
    Pair.EMPTY)))
  ?
  _C2
  :
  _C1
  )
  )
  ))
  ?
  new LCO(new JLIB(USER_DEF, 16, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J47/* java.awt.TextArea. */).apply(new Pair(_C10,
    new Pair(_C11,
    Pair.EMPTY))),
    Pair.EMPTY))
  :
  new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)textarea),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)second)).apply(new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY)),
    Pair.EMPTY))),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY)),
    Pair.EMPTY)),
    Pair.EMPTY))),
    Pair.EMPTY)))
  );


   return tmp; 
}

 Object _L18(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J25/* .drawImage */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    new Pair(_C3,
    new Pair(_C3,
    new Pair((((Pair) ((this.frame).nth(4 ))).getEltNover2(1)),
    Pair.EMPTY))))));

tmp = new LCO(_J21/* .paintHandler$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(_C13,
    Pair.EMPTY)));


   return tmp; 
}

 Object _L19(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J21/* .paintHandler$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(new JLIB(USER_DEF, 18, new Pair( Args, this.frame), dynEnv),
    Pair.EMPTY)));

tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(4)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L20(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J48/* .addImage */).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C12,
    Pair.EMPTY))));

tmp = ((jsint.Procedure) _J49/* .waitForAll */).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    Pair.EMPTY));

tmp = new LCO(new JLIB(USER_DEF, 19, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J50/* jlib.SchemeCanvas. */).apply(new Pair(((jsint.Procedure) _J23/* .getWidth */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(2 ))).getEltNover2(1)),
    Pair.EMPTY))),
    new Pair(((jsint.Procedure) _J24/* .getHeight */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(2 ))).getEltNover2(1)),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY));


   return tmp; 
}

 Object _L21(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 20, new Pair( Args, this.frame), dynEnv),new Pair(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J51/* java.applet.Applet.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  ((jsint.Procedure) _J52/* .getImage */).apply(new Pair(((jsint.Procedure) _J54/* java.awt.Toolkit.getDefaultToolkit */).apply(Pair.EMPTY),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  :
  ((jsint.Procedure) _J52/* .getImage */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J53/* .getDocumentBase */).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ),
    Pair.EMPTY));


   return tmp; 
}

 Object _L22(Pair Args){
   Object tmp=null; 
 tmp = new JLIB(USER_DEF, 21, new Pair( Args, this.frame), dynEnv);


   return tmp; 
}

 Object _L23(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 22, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J55/* java.awt.MediaTracker. */).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L24(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(4)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L25(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 24, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J50/* jlib.SchemeCanvas. */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))),
    Pair.EMPTY));


   return tmp; 
}

 Object _L26(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J51/* java.applet.Applet.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J3/* java.lang.String.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J3/* java.lang.String.class */,
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  _C6
  :
  new LCO(_J52/* .getImage */,new Pair(((jsint.Procedure) _J54/* java.awt.Toolkit.getDefaultToolkit */).apply(Pair.EMPTY),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(_J52/* .getImage */,new Pair(dynEnv.getValue((Symbol)applet),
    new Pair(((jsint.Procedure) _J53/* .getDocumentBase */).apply(new Pair(dynEnv.getValue((Symbol)applet),
    Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  );


   return tmp; 
}

 Object _L27(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)equal_63_)).apply(new Pair(((jsint.Procedure) _J59/* .getID */).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    new Pair((((jsint.Procedure)_J60/* java.awt.event.WindowEvent.WINDOW_CLOSING$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY))))
  ?
  _C1
  :
  new LCO(_J61/* .hide */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY))
  );


   return tmp; 
}

 Object _L28(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J57/* .addWindowListener */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J58/* jsint.Listener11. */).apply(new Pair(new JLIB(USER_DEF, 27, new Pair( Args, this.frame), dynEnv),
    Pair.EMPTY)),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J63/* java.awt.GridLayout. */).apply(new Pair(_C12,
    new Pair(_C12,
    Pair.EMPTY))),
    Pair.EMPTY)));

tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L29(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 28, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J64/* java.awt.Frame. */).apply(Pair.EMPTY),
    Pair.EMPTY));


   return tmp; 
}

 Object _L30(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J66/* java.awt.CheckboxMenuItem. */).apply(Pair.EMPTY));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processConArgs)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L31(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 30, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    Pair.EMPTY));


   return tmp; 
}

 Object _L32(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J67/* java.awt.MenuItem. */).apply(Pair.EMPTY));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processConArgs)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L33(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 32, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    Pair.EMPTY));


   return tmp; 
}

 Object _L34(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J69/* String.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  (( Pair) Args).getEltNover2(1)
  :
  new LCO(dynEnv.getValue((Symbol)menuitem),new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  );


   return tmp; 
}

 Object _L35(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J68/* java.awt.Menu. */).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processConArgs)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)map)).apply(new Pair(new JLIB(USER_DEF, 34, new Pair( Args, this.frame), dynEnv),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)),
    Pair.EMPTY))),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L36(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 35, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    Pair.EMPTY));


   return tmp; 
}

 Object _L37(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J70/* java.awt.MenuBar. */).apply(Pair.EMPTY));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processConArgs)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L38(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 37, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    Pair.EMPTY));


   return tmp; 
}

 Object _L39(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J26/* java.awt.Button.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J32/* java.awt.MenuItem.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J29/* java.awt.Choice.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J73/* java.awt.List.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J74/* java.awt.Label.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J76/* java.awt.TextComponent.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  _C6
  :
  new LCO(_J75/* .getText */,new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J75/* .getText */,new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J72/* .getSelectedItem */,new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J72/* .getSelectedItem */,new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J71/* .getLabel */,new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  )
  :
  new LCO(_J71/* .getLabel */,new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))
  );


   return tmp; 
}

 Object _L40(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J26/* java.awt.Button.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J32/* java.awt.MenuItem.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J39/* java.awt.Menu.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J29/* java.awt.Choice.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J73/* java.awt.List.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J74/* java.awt.Label.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J76/* java.awt.TextComponent.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  _C6
  :
  new LCO(_J80/* .setText */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J80/* .setText */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J79/* .addItem */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J79/* .addItem */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J18/* .add */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J77/* .setLabel */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J77/* .setLabel */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)),
    Pair.EMPTY)))
  );


   return tmp; 
}

 Object _L41(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)writeOneString),new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)apply)).apply(new Pair(dynEnv.getValue((Symbol)string_45_append),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)map)).apply(new Pair(_J78/* .toString */,
    new Pair((( Pair) Args).getEltNover2(2),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L42(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)writeOneString),new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)apply)).apply(new Pair(dynEnv.getValue((Symbol)string_45_append),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)map)).apply(new Pair(_J78/* .toString */,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)append)).apply(new Pair((( Pair) Args).getEltNover2(2),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C14,
    Pair.EMPTY)),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L43(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)writeexpr),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(2)),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L44(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 43, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)readstring)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L45(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)appendexpr),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)append)).apply(new Pair((( Pair) Args).getEltNover2(2),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C14,
    Pair.EMPTY)),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L46(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)string_45__62_expr),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)readstring)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L47(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)string_45__62_exprlist),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)readstring)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L48(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)read),new Pair(((jsint.Procedure) _J82/* jsint.InputPort. */).apply(new Pair(((jsint.Procedure) _J83/* java.io.StringReader. */).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L49(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)eof_45_object_63_)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)))
  ?
  new LCO(dynEnv.getValue((Symbol)cons),new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) (((Pair) ((this.frame).nth(1 ))).getEltNover2(1))).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY)))
  :
  _C6
  );


   return tmp; 
}

 Object _L50(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 49, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)read)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L51(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,new JLIB(USER_DEF, 50, new Pair( Args, this.frame), dynEnv));

tmp = new LCO((( Pair) Args).getEltNover2(1),new Pair(((jsint.Procedure) _J82/* jsint.InputPort. */).apply(new Pair(((jsint.Procedure) _J83/* java.io.StringReader. */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L52(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 51, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    Pair.EMPTY));


   return tmp; 
}

 Object _L53(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)list),new Pair(_C15,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L54(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)list),new Pair(_C16,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L55(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)list),new Pair(_C17,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L56(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)list),new Pair(_C18,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L57(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)list),new Pair(_C19,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L58(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J18/* .add */).apply(new Pair((((Pair) ((this.frame).nth(2 ))).getEltNover2(1)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)second)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY)),
    Pair.EMPTY))));

tmp = new LCO((((Pair) ((this.frame).nth(2 ))).getEltNover2(3)),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L59(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C20,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(_C1)
  ?
  _C6
  :
  new LCO(dynEnv.getValue((Symbol)error),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C21,
    Pair.EMPTY)),
    Pair.EMPTY))
  )
  :
  new LCO(new JLIB(USER_DEF, 58, new Pair( Args, this.frame), dynEnv),Pair.EMPTY)
  );


   return tmp; 
}

 Object _L60(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)pair_63_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY)))
  ?
  new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)))
  :
  new LCO(new JLIB(USER_DEF, 59, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    Pair.EMPTY)),
    Pair.EMPTY))
  );


   return tmp; 
}

 Object _L61(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J84/* java.awt.Panel. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(3,new JLIB(USER_DEF, 60, new Pair( Args, this.frame), dynEnv));

tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J85/* java.awt.BorderLayout. */).apply(Pair.EMPTY),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) (( Pair) Args).getEltNover2(3)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L62(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 61, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    new Pair(_C2,
    Pair.EMPTY)));


   return tmp; 
}

 Object _L63(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(((jsint.Procedure) _J63/* java.awt.GridLayout. */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY))),
    Pair.EMPTY)));

tmp = new LCO(dynEnv.getValue((Symbol)processConArgs),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(4)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L64(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 63, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J84/* java.awt.Panel. */).apply(Pair.EMPTY),
    Pair.EMPTY));


   return tmp; 
}

 Object _L65(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J86/* .gridx$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J87/* .gridy$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(5),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J88/* .gridwidth$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(7),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J89/* .gridheight$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(9),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J90/* .fill$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(11),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J91/* .ipadx$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(13),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J92/* .ipady$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(15),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J93/* .insets$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(17),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J94/* .anchor$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(19),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J95/* .weightx$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(21),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J96/* .weighty$ */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(23),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L66(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J97/* .setConstraints */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY))));

tmp = new LCO(_J18/* .add */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L67(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J98/* jsint.Symbol.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J34/* java.awt.Color.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J11/* jsint.Pair.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J41/* java.lang.Object.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  ))
  ?
  _C6
  :
  new LCO(dynEnv.getValue((Symbol)error),new Pair(_C22,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)))
  )
  :
  new LCO(dynEnv.getValue((Symbol)processPair),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)second)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))))
  )
  :
  new LCO(_J35/* .setBackground */,new Pair((( Pair) Args).getEltNover2(5),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)))
  )
  :
  new LCO(dynEnv.getValue((Symbol)processSymbol),new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)))
  )
  :
  new LCO(new JLIB(USER_DEF, 66, new Pair( Args, this.frame), dynEnv),Pair.EMPTY)
  );


   return tmp; 
}

 Object _L68(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C23,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C24,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C25,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C26,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C27,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C28,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C29,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C30,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C31,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C32,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C33,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C34,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C35,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(_C1)
  ?
  _C6
  :
  new LCO(dynEnv.getValue((Symbol)error),new Pair(_C36,
    new Pair(((jsint.Procedure) _J78/* .toString */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J111/* java.awt.GridBagConstraints.WEST$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J110/* java.awt.GridBagConstraints.EAST$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J109/* java.awt.GridBagConstraints.CENTER$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J108/* java.awt.GridBagConstraints.SOUTHWEST$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J107/* java.awt.GridBagConstraints.SOUTHEAST$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J106/* java.awt.GridBagConstraints.SOUTH$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J105/* java.awt.GridBagConstraints.NORTHWEST$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J104/* java.awt.GridBagConstraints.NORTHEAST$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J103/* java.awt.GridBagConstraints.NORTH$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J90/* .fill$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J102/* java.awt.GridBagConstraints.VERTICAL$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J90/* .fill$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J101/* java.awt.GridBagConstraints.HORIZONTAL$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J90/* .fill$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J100/* java.awt.GridBagConstraints.NONE$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J90/* .fill$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((jsint.Procedure)_J99/* java.awt.GridBagConstraints.BOTH$ */).apply(jsint.Pair.EMPTY)),
    Pair.EMPTY)))
  );


   return tmp; 
}

 Object _L69(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 68, new Pair( Args, this.frame), dynEnv),new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY));


   return tmp; 
}

 Object _L70(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C37,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C38,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C39,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C40,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(_C1)
  ?
  _C6
  :
  new LCO(dynEnv.getValue((Symbol)error),new Pair(_C22,
    new Pair(dynEnv.getValue((Symbol)A),
    Pair.EMPTY)))
  )
  :
  new LCO(_J96/* .weighty$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J95/* .weightx$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J94/* .anchor$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J90/* .fill$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)))
  );


   return tmp; 
}

 Object _L71(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 70, new Pair( Args, this.frame), dynEnv),new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY));


   return tmp; 
}

 Object _L72(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processGBCarg)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    Pair.EMPTY)))));

tmp = new LCO((((Pair) ((this.frame).nth(1 ))).getEltNover2(9)),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    Pair.EMPTY)))));


   return tmp; 
}

 Object _L73(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)null_63_)).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)))
  ?
  new LCO(new JLIB(USER_DEF, 72, new Pair( Args, this.frame), dynEnv),Pair.EMPTY)
  :
  (( Pair) Args).getEltNover2(5)
  );


   return tmp; 
}

 Object _L74(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J86/* .gridx$ */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(11)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)));

tmp = new LCO(_J87/* .gridy$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(11)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L75(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J86/* .gridx$ */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(11)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    Pair.EMPTY)));

tmp = new LCO(_J87/* .gridy$ */,new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(11)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L76(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processGBCarg)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(9)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(11)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(13)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(15)),
    Pair.EMPTY)))));

tmp = new LCO((((Pair) ((this.frame).nth(6 ))).getEltNover2(11)),new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(7)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(9)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(11)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(13)),
    new Pair((((Pair) ((this.frame).nth(5 ))).getEltNover2(15)),
    Pair.EMPTY)))))))));


   return tmp; 
}

 Object _L77(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 76, new Pair( Args, this.frame), dynEnv),Pair.EMPTY);


   return tmp; 
}

 Object _L78(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 77, new Pair( Args, this.frame), dynEnv),new Pair(
  (Boolean.FALSE.equals((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)))
  ?
  (((Pair) ((this.frame).nth(3 ))).getEltNover2(3))
  :
  ((jsint.Procedure) dynEnv.getValue((Symbol)_43_)).apply(new Pair(_C12,
    new Pair((((Pair) ((this.frame).nth(3 ))).getEltNover2(3)),
    Pair.EMPTY)))
  ),
    Pair.EMPTY));


   return tmp; 
}

 Object _L79(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 78, new Pair( Args, this.frame), dynEnv),new Pair(
  (Boolean.FALSE.equals((( Pair) Args).getEltNover2(1))
  ?
  
  (Boolean.FALSE.equals((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)))
  ?
  (((Pair) ((this.frame).nth(2 ))).getEltNover2(5))
  :
  ((jsint.Procedure) dynEnv.getValue((Symbol)_43_)).apply(new Pair(_C12,
    new Pair((((Pair) ((this.frame).nth(2 ))).getEltNover2(5)),
    Pair.EMPTY)))
  )
  :
  _C12
  ),
    Pair.EMPTY));


   return tmp; 
}

 Object _L80(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 79, new Pair( Args, this.frame), dynEnv),new Pair(
  (Boolean.FALSE.equals((( Pair) Args).getEltNover2(1))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)_61_)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(5)),
    new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(7)),
    Pair.EMPTY))))
  ?
  _C2
  :
  _C1
  )
  ),
    Pair.EMPTY));


   return tmp; 
}

 Object _L81(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 80, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J1/* .isInstance */).apply(new Pair(_J6/* java.awt.Component.class */,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))),
    Pair.EMPTY));


   return tmp; 
}

 Object _L82(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)equal_63_)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C41,
    Pair.EMPTY))))
  ?
  ((jsint.Procedure) new JLIB(USER_DEF, 75, new Pair( Args, this.frame), dynEnv)).apply(Pair.EMPTY)
  :
  ((jsint.Procedure) new JLIB(USER_DEF, 74, new Pair( Args, this.frame), dynEnv)).apply(Pair.EMPTY)
  );

tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)null_63_)).apply(new Pair((( Pair) Args).getEltNover2(9),
    Pair.EMPTY)))
  ?
  new LCO(new JLIB(USER_DEF, 81, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((( Pair) Args).getEltNover2(9),
    Pair.EMPTY)),
    Pair.EMPTY))
  :
  (( Pair) Args).getEltNover2(13)
  );


   return tmp; 
}

 Object _L83(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C44,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C45,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(_C1)
  ?
  _C6
  :
  new LCO(dynEnv.getValue((Symbol)_throw),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C46,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C47,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)append)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(0)),
    new Pair(_C6,
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY))
  )
  :
  new LCO((((Pair) ((this.frame).nth(0 ))).getEltNover2(9)),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(0)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    Pair.EMPTY)))))
  )
  :
  new LCO((((Pair) ((this.frame).nth(0 ))).getEltNover2(11)),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(0)),
    Pair.EMPTY)),
    new Pair(_C12,
    new Pair(_C12,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)second)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(0)),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)rest)).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(0)),
    Pair.EMPTY)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    Pair.EMPTY)))))))))
  );


   return tmp; 
}

 Object _L84(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J84/* java.awt.Panel. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(3,((jsint.Procedure) _J112/* java.awt.GridBagConstraints. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(5,((jsint.Procedure) _J113/* java.awt.GridBagLayout. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(7,new JLIB(USER_DEF, 71, new Pair( Args, this.frame), dynEnv));

tmp = (( Pair) Args).setEltNover2(9,new JLIB(USER_DEF, 73, new Pair( Args, this.frame), dynEnv));

tmp = (( Pair) Args).setEltNover2(11,new JLIB(USER_DEF, 82, new Pair( Args, this.frame), dynEnv));

tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(5),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)gbc_45_constraint)).apply(new Pair((( Pair) Args).getEltNover2(3),
    new Pair(
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)equal_63_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)),
    new Pair(_C42,
    Pair.EMPTY))))
  ?
  _C12
  :
  (((jsint.Procedure)_J114/* java.awt.GridBagConstraints.RELATIVE$ */).apply(jsint.Pair.EMPTY))
  ),
    new Pair(
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)equal_63_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)),
    new Pair(_C42,
    Pair.EMPTY))))
  ?
  (((jsint.Procedure)_J114/* java.awt.GridBagConstraints.RELATIVE$ */).apply(jsint.Pair.EMPTY))
  :
  _C12
  ),
    new Pair(_C12,
    new Pair(_C12,
    new Pair((((jsint.Procedure)_J99/* java.awt.GridBagConstraints.BOTH$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C12,
    new Pair(_C12,
    new Pair(((jsint.Procedure) _J115/* java.awt.Insets. */).apply(new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    Pair.EMPTY))))),
    new Pair((((jsint.Procedure)_J109/* java.awt.GridBagConstraints.CENTER$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C43,
    new Pair(_C43,
    Pair.EMPTY)))))))))))));

tmp = new LCO(new JLIB(USER_DEF, 83, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L85(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 84, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    new Pair(_C2,
    new Pair(_C2,
    new Pair(_C2,
    new Pair(_C2,
    new Pair(_C2,
    Pair.EMPTY)))))));


   return tmp; 
}

 Object _L86(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)box),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C42,
    new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L87(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)box),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C48,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair((( Pair) Args).getEltNover2(3),
    new Pair((( Pair) Args).getEltNover2(4),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L88(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)box),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C48,
    new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L89(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)box),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C49,
    new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L90(Pair Args){
   Object tmp=null; 
 tmp = new LCO(dynEnv.getValue((Symbol)apply),new Pair(dynEnv.getValue((Symbol)box),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C41,
    new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L91(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J84/* java.awt.Panel. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(3,((jsint.Procedure) _J112/* java.awt.GridBagConstraints. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(5,((jsint.Procedure) _J113/* java.awt.GridBagLayout. */).apply(Pair.EMPTY));

tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(5),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)gbc_45_constraint)).apply(new Pair((( Pair) Args).getEltNover2(3),
    new Pair((((jsint.Procedure)_J114/* java.awt.GridBagConstraints.RELATIVE$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    new Pair((((jsint.Procedure)_J99/* java.awt.GridBagConstraints.BOTH$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C12,
    new Pair(_C12,
    new Pair(((jsint.Procedure) _J115/* java.awt.Insets. */).apply(new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    Pair.EMPTY))))),
    new Pair((((jsint.Procedure)_J109/* java.awt.GridBagConstraints.CENTER$ */).apply(jsint.Pair.EMPTY)),
    new Pair(((jsint.Procedure) _J116/* .doubleValue */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair(_C43,
    Pair.EMPTY)))))))))))));

tmp = ((jsint.Procedure) _J97/* .setConstraints */).apply(new Pair((( Pair) Args).getEltNover2(5),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))));

tmp = ((jsint.Procedure) _J18/* .add */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J95/* .weightx$ */).apply(new Pair((( Pair) Args).getEltNover2(3),
    new Pair(((jsint.Procedure) _J116/* .doubleValue */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J97/* .setConstraints */).apply(new Pair((( Pair) Args).getEltNover2(5),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))));

tmp = ((jsint.Procedure) _J18/* .add */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L92(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 91, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    new Pair(_C2,
    new Pair(_C2,
    Pair.EMPTY))));


   return tmp; 
}

 Object _L93(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J84/* java.awt.Panel. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(3,((jsint.Procedure) _J112/* java.awt.GridBagConstraints. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(5,((jsint.Procedure) _J113/* java.awt.GridBagLayout. */).apply(Pair.EMPTY));

tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(5),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)gbc_45_constraint)).apply(new Pair((( Pair) Args).getEltNover2(3),
    new Pair(_C12,
    new Pair((((jsint.Procedure)_J114/* java.awt.GridBagConstraints.RELATIVE$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C12,
    new Pair(_C12,
    new Pair((((jsint.Procedure)_J99/* java.awt.GridBagConstraints.BOTH$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C12,
    new Pair(_C12,
    new Pair(((jsint.Procedure) _J115/* java.awt.Insets. */).apply(new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    new Pair(_C12,
    Pair.EMPTY))))),
    new Pair((((jsint.Procedure)_J109/* java.awt.GridBagConstraints.CENTER$ */).apply(jsint.Pair.EMPTY)),
    new Pair(_C43,
    new Pair(((jsint.Procedure) _J116/* .doubleValue */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    Pair.EMPTY)))))))))))));

tmp = ((jsint.Procedure) _J97/* .setConstraints */).apply(new Pair((( Pair) Args).getEltNover2(5),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))));

tmp = ((jsint.Procedure) _J18/* .add */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(5)),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J96/* .weighty$ */).apply(new Pair((( Pair) Args).getEltNover2(3),
    new Pair(((jsint.Procedure) _J116/* .doubleValue */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY)),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J97/* .setConstraints */).apply(new Pair((( Pair) Args).getEltNover2(5),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY))));

tmp = ((jsint.Procedure) _J18/* .add */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(7)),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L94(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 93, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    new Pair(_C2,
    new Pair(_C2,
    Pair.EMPTY))));


   return tmp; 
}

 Object _L95(Pair Args){
   Object tmp=null; 
 tmp = (( Pair) Args).setEltNover2(1,((jsint.Procedure) _J84/* java.awt.Panel. */).apply(Pair.EMPTY));

tmp = (( Pair) Args).setEltNover2(3,((jsint.Procedure) _J117/* java.awt.CardLayout. */).apply(Pair.EMPTY));

tmp = ((jsint.Procedure) _J62/* .setLayout */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)processConArgs)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(0)),
    Pair.EMPTY)));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L96(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 95, new Pair( Args, this.frame), dynEnv),new Pair(_C2,
    new Pair(_C2,
    Pair.EMPTY)));


   return tmp; 
}

 Object _L97(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J18/* .add */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L98(Pair Args){
   Object tmp=null; 
 tmp = new JLIB(USER_DEF, 97, new Pair( Args, this.frame), dynEnv);


   return tmp; 
}

 Object _L99(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C50,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C51,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C52,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)member)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C53,
    Pair.EMPTY))))
  ?
  
  (Boolean.FALSE.equals(_C1)
  ?
  _C6
  :
  new LCO(_J123/* .show */,new Pair(((jsint.Procedure) _J119/* .getLayout */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(3)),
    Pair.EMPTY))))
  )
  :
  new LCO(_J122/* .previous */,new Pair(((jsint.Procedure) _J119/* .getLayout */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J121/* .next */,new Pair(((jsint.Procedure) _J119/* .getLayout */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J120/* .last */,new Pair(((jsint.Procedure) _J119/* .getLayout */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)))
  )
  :
  new LCO(_J118/* .first */,new Pair(((jsint.Procedure) _J119/* .getLayout */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY)))
  );


   return tmp; 
}

 Object _L100(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 99, new Pair( Args, this.frame), dynEnv),new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY));


   return tmp; 
}

 Object _L101(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C54,
    new Pair((((jsint.Procedure)_J125/* java.awt.Font.PLAIN$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L102(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C54,
    new Pair((((jsint.Procedure)_J125/* java.awt.Font.PLAIN$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L103(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C54,
    new Pair((((jsint.Procedure)_J126/* java.awt.Font.BOLD$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L104(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C54,
    new Pair((((jsint.Procedure)_J127/* java.awt.Font.ITALIC$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L105(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C55,
    new Pair((((jsint.Procedure)_J125/* java.awt.Font.PLAIN$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L106(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C55,
    new Pair((((jsint.Procedure)_J125/* java.awt.Font.PLAIN$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L107(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C55,
    new Pair((((jsint.Procedure)_J126/* java.awt.Font.BOLD$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L108(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C55,
    new Pair((((jsint.Procedure)_J127/* java.awt.Font.ITALIC$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L109(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C56,
    new Pair((((jsint.Procedure)_J125/* java.awt.Font.PLAIN$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L110(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C56,
    new Pair((((jsint.Procedure)_J125/* java.awt.Font.PLAIN$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L111(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C56,
    new Pair((((jsint.Procedure)_J126/* java.awt.Font.BOLD$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L112(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J124/* java.awt.Font. */,new Pair(_C56,
    new Pair((((jsint.Procedure)_J127/* java.awt.Font.ITALIC$ */).apply(jsint.Pair.EMPTY)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))));


   return tmp; 
}

 Object _L113(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J142/* java.awt.Dimension. */,new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(3),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L114(Pair Args){
   Object tmp=null; 
 tmp = 
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)eq_63_)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(_C13,
    Pair.EMPTY))))
  ?
  (( Pair) Args).getEltNover2(1)
  :
  new LCO(dynEnv.getValue((Symbol)_throw),new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C57,
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(2)),
    Pair.EMPTY)))),
    Pair.EMPTY))
  );


   return tmp; 
}

 Object _L115(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J144/* .put */).apply(new Pair((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)first)).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(2)),
    Pair.EMPTY)),
    Pair.EMPTY))));

tmp = new LCO(dynEnv.getValue((Symbol)first),new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(2)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L116(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 114, new Pair( Args, this.frame), dynEnv),new Pair(
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)null_63_)).apply(new Pair((( Pair) Args).getEltNover2(2),
    Pair.EMPTY)))
  ?
  
  (Boolean.FALSE.equals(
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)pair_63_)).apply(new Pair((( Pair) Args).getEltNover2(2),
    Pair.EMPTY)))
  ?
  _C2
  :
  
  (Boolean.FALSE.equals(((jsint.Procedure) dynEnv.getValue((Symbol)null_63_)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cdr)).apply(new Pair((( Pair) Args).getEltNover2(2),
    Pair.EMPTY)),
    Pair.EMPTY)))
  ?
  _C2
  :
  _C1
  )
  ))
  ?
  
  (Boolean.FALSE.equals(_C1)
  ?
  _C6
  :
  ((jsint.Procedure) dynEnv.getValue((Symbol)_throw)).apply(new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)list)).apply(new Pair(_C58,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C59,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair((( Pair) Args).getEltNover2(2),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY))
  )
  :
  ((jsint.Procedure) new JLIB(USER_DEF, 115, new Pair( Args, this.frame), dynEnv)).apply(Pair.EMPTY)
  )
  :
  ((jsint.Procedure) _J143/* .get */).apply(new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY)))
  ),
    Pair.EMPTY));


   return tmp; 
}

 Object _L117(Pair Args){
   Object tmp=null; 
 tmp = new JLIB(USER_DEF, 116, new Pair( Args, this.frame), dynEnv);


   return tmp; 
}

 Object _L118(Pair Args){
   Object tmp=null; 
 tmp = new LCO(new JLIB(USER_DEF, 117, new Pair( Args, this.frame), dynEnv),new Pair(((jsint.Procedure) _J145/* java.util.Hashtable. */).apply(Pair.EMPTY),
    Pair.EMPTY));


   return tmp; 
}

 Object _L119(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) _J35/* .setBackground */).apply(new Pair((( Pair) Args).getEltNover2(1),
    new Pair(dynEnv.getValue((Symbol)red),
    Pair.EMPTY)));

tmp = ((jsint.Procedure) _J146/* .pack */).apply(new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY));

tmp = (( Pair) Args).getEltNover2(1);


   return tmp; 
}

 Object _L120(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J80/* .setText */,new Pair(dynEnv.getValue((Symbol)actionerrortextarea),
    new Pair(_C7,
    Pair.EMPTY)));


   return tmp; 
}

 Object _L121(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J147/* .println */,new Pair(((jsint.Procedure) _J148/* .getError */).apply(new Pair(((jsint.Procedure) _J149/* jsint.Scheme.currentEvaluator */).apply(Pair.EMPTY),
    Pair.EMPTY)),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)apply)).apply(new Pair(dynEnv.getValue((Symbol)string_45_append),
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)cons)).apply(new Pair(_C65,
    new Pair(((jsint.Procedure) dynEnv.getValue((Symbol)map)).apply(new Pair(_J81/* jsint.U.stringify */,
    new Pair((( Pair) Args).getEltNover2(0),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY))),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L122(Pair Args){
   Object tmp=null; 
 tmp = new LCO((((Pair) ((this.frame).nth(1 ))).getEltNover2(1)),new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    Pair.EMPTY));


   return tmp; 
}

 Object _L123(Pair Args){
   Object tmp=null; 
 tmp = ((jsint.Procedure) dynEnv.getValue((Symbol)appendlnstring)).apply(new Pair(dynEnv.getValue((Symbol)actionerrortextarea),
    new Pair(_C66,
    new Pair((((Pair) ((this.frame).nth(0 ))).getEltNover2(1)),
    new Pair(_C67,
    new Pair((( Pair) Args).getEltNover2(1),
    Pair.EMPTY))))));

tmp = new LCO(_J123/* .show */,new Pair(dynEnv.getValue((Symbol)actionerrorwindow),
    Pair.EMPTY));


   return tmp; 
}

 Object _L124(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J150/* jsint.Procedure.tryCatch */,new Pair(new JLIB(USER_DEF, 122, new Pair( Args, this.frame), dynEnv),
    new Pair(new JLIB(USER_DEF, 123, new Pair( Args, this.frame), dynEnv),
    Pair.EMPTY)));


   return tmp; 
}

 Object _L125(Pair Args){
   Object tmp=null; 
 tmp = new LCO(_J58/* jsint.Listener11. */,new Pair(new JLIB(USER_DEF, 124, new Pair( Args, this.frame), dynEnv),
    Pair.EMPTY));


   return tmp; 
}


 // definitions of java literals

static boolean [][] _moreApplicable__J0/* jscheme.REPL.eval */ = new boolean[][]{ 
{true}

};

public static Object _J0/* jscheme.REPL.eval */(Pair args){
int numargs = args.length();
Object 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J0/* jscheme.REPL.eval */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Object))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return jscheme.REPL.eval(
            (java.lang.Object) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J0/* jscheme.REPL.eval */ = new JLIB( JAVA_LIT, 0/* jscheme.REPL.eval*/, Pair.EMPTY);

public static Object _J1/* .isInstance */(Pair Args){
  return (((jsint.Procedure)_J1/* .isInstance */).apply(Args));}
static Object _J1/* .isInstance */ = new JavaMethod("isInstance", null, false);

public static Object _J2/* java.awt.Frame.class */(Pair Args){
  return (((jsint.Procedure)_J2/* java.awt.Frame.class */).apply(Args));}
static Object _J2/* java.awt.Frame.class */ = java.awt.Frame.class;

public static Object _J3/* java.lang.String.class */(Pair Args){
  return (((jsint.Procedure)_J3/* java.lang.String.class */).apply(Args));}
static Object _J3/* java.lang.String.class */ = java.lang.String.class;

public static Object _J4/* .setTitle */(Pair Args){
  return (((jsint.Procedure)_J4/* .setTitle */).apply(Args));}
static Object _J4/* .setTitle */ = new JavaMethod("setTitle", null, false);

public static Object _J5/* java.awt.MenuComponent.class */(Pair Args){
  return (((jsint.Procedure)_J5/* java.awt.MenuComponent.class */).apply(Args));}
static Object _J5/* java.awt.MenuComponent.class */ = java.awt.MenuComponent.class;

public static Object _J6/* java.awt.Component.class */(Pair Args){
  return (((jsint.Procedure)_J6/* java.awt.Component.class */).apply(Args));}
static Object _J6/* java.awt.Component.class */ = java.awt.Component.class;

public static Object _J7/* java.awt.TextField.class */(Pair Args){
  return (((jsint.Procedure)_J7/* java.awt.TextField.class */).apply(Args));}
static Object _J7/* java.awt.TextField.class */ = java.awt.TextField.class;

public static Object _J8/* java.lang.Integer.class */(Pair Args){
  return (((jsint.Procedure)_J8/* java.lang.Integer.class */).apply(Args));}
static Object _J8/* java.lang.Integer.class */ = java.lang.Integer.class;

public static Object _J9/* .setColumns */(Pair Args){
  return (((jsint.Procedure)_J9/* .setColumns */).apply(Args));}
static Object _J9/* .setColumns */ = new JavaMethod("setColumns", null, false);

public static Object _J10/* java.awt.TextArea.class */(Pair Args){
  return (((jsint.Procedure)_J10/* java.awt.TextArea.class */).apply(Args));}
static Object _J10/* java.awt.TextArea.class */ = java.awt.TextArea.class;

public static Object _J11/* jsint.Pair.class */(Pair Args){
  return (((jsint.Procedure)_J11/* jsint.Pair.class */).apply(Args));}
static Object _J11/* jsint.Pair.class */ = jsint.Pair.class;

public static Object _J12/* .setRows */(Pair Args){
  return (((jsint.Procedure)_J12/* .setRows */).apply(Args));}
static Object _J12/* .setRows */ = new JavaMethod("setRows", null, false);

public static Object _J13/* java.awt.MenuBar.class */(Pair Args){
  return (((jsint.Procedure)_J13/* java.awt.MenuBar.class */).apply(Args));}
static Object _J13/* java.awt.MenuBar.class */ = java.awt.MenuBar.class;

public static Object _J14/* .setMenuBar */(Pair Args){
  return (((jsint.Procedure)_J14/* .setMenuBar */).apply(Args));}
static Object _J14/* .setMenuBar */ = new JavaMethod("setMenuBar", null, false);

public static Object _J15/* java.awt.Container.class */(Pair Args){
  return (((jsint.Procedure)_J15/* java.awt.Container.class */).apply(Args));}
static Object _J15/* java.awt.Container.class */ = java.awt.Container.class;

public static Object _J16/* java.awt.LayoutManager.class */(Pair Args){
  return (((jsint.Procedure)_J16/* java.awt.LayoutManager.class */).apply(Args));}
static Object _J16/* java.awt.LayoutManager.class */ = java.awt.LayoutManager.class;

public static Object _J17/* .setLayoutManager */(Pair Args){
  return (((jsint.Procedure)_J17/* .setLayoutManager */).apply(Args));}
static Object _J17/* .setLayoutManager */ = new JavaMethod("setLayoutManager", null, false);

public static Object _J18/* .add */(Pair Args){
  return (((jsint.Procedure)_J18/* .add */).apply(Args));}
static Object _J18/* .add */ = new JavaMethod("add", null, false);

public static Object _J19/* jlib.SchemeCanvas.class */(Pair Args){
  return (((jsint.Procedure)_J19/* jlib.SchemeCanvas.class */).apply(Args));}
static Object _J19/* jlib.SchemeCanvas.class */ = jlib.SchemeCanvas.class;

public static Object _J20/* java.awt.Image.class */(Pair Args){
  return (((jsint.Procedure)_J20/* java.awt.Image.class */).apply(Args));}
static Object _J20/* java.awt.Image.class */ = java.awt.Image.class;

public static Object _J21/* .paintHandler$ */(Pair Args){
  return (((jsint.Procedure)_J21/* .paintHandler$ */).apply(Args));}
static Object _J21/* .paintHandler$ */ = new JavaField("paintHandler", null);

public static Object _J22/* .setSize */(Pair Args){
  return (((jsint.Procedure)_J22/* .setSize */).apply(Args));}
static Object _J22/* .setSize */ = new JavaMethod("setSize", null, false);

public static Object _J23/* .getWidth */(Pair Args){
  return (((jsint.Procedure)_J23/* .getWidth */).apply(Args));}
static Object _J23/* .getWidth */ = new JavaMethod("getWidth", null, false);

public static Object _J24/* .getHeight */(Pair Args){
  return (((jsint.Procedure)_J24/* .getHeight */).apply(Args));}
static Object _J24/* .getHeight */ = new JavaMethod("getHeight", null, false);

public static Object _J25/* .drawImage */(Pair Args){
  return (((jsint.Procedure)_J25/* .drawImage */).apply(Args));}
static Object _J25/* .drawImage */ = new JavaMethod("drawImage", null, false);

public static Object _J26/* java.awt.Button.class */(Pair Args){
  return (((jsint.Procedure)_J26/* java.awt.Button.class */).apply(Args));}
static Object _J26/* java.awt.Button.class */ = java.awt.Button.class;

public static Object _J27/* jsint.JavaListener.class */(Pair Args){
  return (((jsint.Procedure)_J27/* jsint.JavaListener.class */).apply(Args));}
static Object _J27/* jsint.JavaListener.class */ = jsint.JavaListener.class;

public static Object _J28/* .addActionListener */(Pair Args){
  return (((jsint.Procedure)_J28/* .addActionListener */).apply(Args));}
static Object _J28/* .addActionListener */ = new JavaMethod("addActionListener", null, false);

public static Object _J29/* java.awt.Choice.class */(Pair Args){
  return (((jsint.Procedure)_J29/* java.awt.Choice.class */).apply(Args));}
static Object _J29/* java.awt.Choice.class */ = java.awt.Choice.class;

public static Object _J30/* .addItemListener */(Pair Args){
  return (((jsint.Procedure)_J30/* .addItemListener */).apply(Args));}
static Object _J30/* .addItemListener */ = new JavaMethod("addItemListener", null, false);

public static Object _J31/* java.awt.Checkbox.class */(Pair Args){
  return (((jsint.Procedure)_J31/* java.awt.Checkbox.class */).apply(Args));}
static Object _J31/* java.awt.Checkbox.class */ = java.awt.Checkbox.class;

public static Object _J32/* java.awt.MenuItem.class */(Pair Args){
  return (((jsint.Procedure)_J32/* java.awt.MenuItem.class */).apply(Args));}
static Object _J32/* java.awt.MenuItem.class */ = java.awt.MenuItem.class;

public static Object _J33/* java.awt.CheckboxMenuItem.class */(Pair Args){
  return (((jsint.Procedure)_J33/* java.awt.CheckboxMenuItem.class */).apply(Args));}
static Object _J33/* java.awt.CheckboxMenuItem.class */ = java.awt.CheckboxMenuItem.class;

public static Object _J34/* java.awt.Color.class */(Pair Args){
  return (((jsint.Procedure)_J34/* java.awt.Color.class */).apply(Args));}
static Object _J34/* java.awt.Color.class */ = java.awt.Color.class;

public static Object _J35/* .setBackground */(Pair Args){
  return (((jsint.Procedure)_J35/* .setBackground */).apply(Args));}
static Object _J35/* .setBackground */ = new JavaMethod("setBackground", null, false);

public static Object _J36/* jsint.Procedure.class */(Pair Args){
  return (((jsint.Procedure)_J36/* jsint.Procedure.class */).apply(Args));}
static Object _J36/* jsint.Procedure.class */ = jsint.Procedure.class;

public static Object _J37/* java.awt.Font.class */(Pair Args){
  return (((jsint.Procedure)_J37/* java.awt.Font.class */).apply(Args));}
static Object _J37/* java.awt.Font.class */ = java.awt.Font.class;

public static Object _J38/* .setFont */(Pair Args){
  return (((jsint.Procedure)_J38/* .setFont */).apply(Args));}
static Object _J38/* .setFont */ = new JavaMethod("setFont", null, false);

public static Object _J39/* java.awt.Menu.class */(Pair Args){
  return (((jsint.Procedure)_J39/* java.awt.Menu.class */).apply(Args));}
static Object _J39/* java.awt.Menu.class */ = java.awt.Menu.class;

public static Object _J40/* java.awt.Dimension.class */(Pair Args){
  return (((jsint.Procedure)_J40/* java.awt.Dimension.class */).apply(Args));}
static Object _J40/* java.awt.Dimension.class */ = java.awt.Dimension.class;

public static Object _J41/* java.lang.Object.class */(Pair Args){
  return (((jsint.Procedure)_J41/* java.lang.Object.class */).apply(Args));}
static Object _J41/* java.lang.Object.class */ = java.lang.Object.class;

public static Object _J42/* .getClass */(Pair Args){
  return (((jsint.Procedure)_J42/* .getClass */).apply(Args));}
static Object _J42/* .getClass */ = new JavaMethod("getClass", null, false);


static boolean [][] _moreApplicable__J43/* java.awt.Button. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.Button _J43/* java.awt.Button. */(Pair args){
int numargs = args.length();
java.awt.Button 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J43/* java.awt.Button. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 0;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J43/* java.awt.Button. */[ 1][b]))
        &&
       (true)) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Button(
            (java.lang.String) args.nth(0) ); 
    case 1: return new java.awt.Button(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J43/* java.awt.Button. */ = new JLIB( JAVA_LIT, 43/* java.awt.Button.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J44/* java.awt.Choice. */ = new boolean[][]{ 
{true}

};

public static java.awt.Choice _J44/* java.awt.Choice. */(Pair args){
int numargs = args.length();
java.awt.Choice 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J44/* java.awt.Choice. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Choice(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J44/* java.awt.Choice. */ = new JLIB( JAVA_LIT, 44/* java.awt.Choice.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J45/* java.awt.Label. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static java.awt.Label _J45/* java.awt.Label. */(Pair args){
int numargs = args.length();
java.awt.Label 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J45/* java.awt.Label. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J45/* java.awt.Label. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 1;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J45/* java.awt.Label. */[ 2][b]))
        &&
       (true)) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Label(
            (java.lang.String) args.nth(0),
            (((Integer) (args.nth(1))).intValue()) ); 
    case 1: return new java.awt.Label(
            (java.lang.String) args.nth(0) ); 
    case 2: return new java.awt.Label(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J45/* java.awt.Label. */ = new JLIB( JAVA_LIT, 45/* java.awt.Label.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J46/* java.awt.TextField. */ = new boolean[][]{ 
{true,false,false,false},
{false,true,false,false},
{false,false,true,false},
{false,false,false,true}

};

public static java.awt.TextField _J46/* java.awt.TextField. */(Pair args){
int numargs = args.length();
java.awt.TextField 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J46/* java.awt.TextField. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J46/* java.awt.TextField. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 1;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J46/* java.awt.TextField. */[ 2][b]))
        &&
       (true)) 
       { b = 2;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J46/* java.awt.TextField. */[ 3][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 3;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.TextField(
            (((Integer) (args.nth(0))).intValue()) ); 
    case 1: return new java.awt.TextField(
            (java.lang.String) args.nth(0) ); 
    case 2: return new java.awt.TextField(); 
    case 3: return new java.awt.TextField(
            (java.lang.String) args.nth(0),
            (((Integer) (args.nth(1))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J46/* java.awt.TextField. */ = new JLIB( JAVA_LIT, 46/* java.awt.TextField.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J47/* java.awt.TextArea. */ = new boolean[][]{ 
{true,false,false,false,false},
{false,true,false,false,false},
{false,false,true,false,false},
{false,false,false,true,false},
{false,false,false,false,true}

};

public static java.awt.TextArea _J47/* java.awt.TextArea. */(Pair args){
int numargs = args.length();
java.awt.TextArea 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 3)
        &&
       ((b== -1) || (_moreApplicable__J47/* java.awt.TextArea. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer))) 
       { b = 0;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J47/* java.awt.TextArea. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 1;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J47/* java.awt.TextArea. */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 2;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J47/* java.awt.TextArea. */[ 3][b]))
        &&
       (true)) 
       { b = 3;}
   
    if ((numargs== 4)
        &&
       ((b== -1) || (_moreApplicable__J47/* java.awt.TextArea. */[ 4][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer) &&
        (args.nth(3) instanceof java.lang.Integer))) 
       { b = 4;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.TextArea(
            (java.lang.String) args.nth(0),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()) ); 
    case 1: return new java.awt.TextArea(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()) ); 
    case 2: return new java.awt.TextArea(
            (java.lang.String) args.nth(0) ); 
    case 3: return new java.awt.TextArea(); 
    case 4: return new java.awt.TextArea(
            (java.lang.String) args.nth(0),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()),
            (((Integer) (args.nth(3))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J47/* java.awt.TextArea. */ = new JLIB( JAVA_LIT, 47/* java.awt.TextArea.*/, Pair.EMPTY);

public static Object _J48/* .addImage */(Pair Args){
  return (((jsint.Procedure)_J48/* .addImage */).apply(Args));}
static Object _J48/* .addImage */ = new JavaMethod("addImage", null, false);

public static Object _J49/* .waitForAll */(Pair Args){
  return (((jsint.Procedure)_J49/* .waitForAll */).apply(Args));}
static Object _J49/* .waitForAll */ = new JavaMethod("waitForAll", null, false);


static boolean [][] _moreApplicable__J50/* jlib.SchemeCanvas. */ = new boolean[][]{ 
{true}

};

public static jlib.SchemeCanvas _J50/* jlib.SchemeCanvas. */(Pair args){
int numargs = args.length();
jlib.SchemeCanvas 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J50/* jlib.SchemeCanvas. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new jlib.SchemeCanvas(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J50/* jlib.SchemeCanvas. */ = new JLIB( JAVA_LIT, 50/* jlib.SchemeCanvas.*/, Pair.EMPTY);

public static Object _J51/* java.applet.Applet.class */(Pair Args){
  return (((jsint.Procedure)_J51/* java.applet.Applet.class */).apply(Args));}
static Object _J51/* java.applet.Applet.class */ = java.applet.Applet.class;

public static Object _J52/* .getImage */(Pair Args){
  return (((jsint.Procedure)_J52/* .getImage */).apply(Args));}
static Object _J52/* .getImage */ = new JavaMethod("getImage", null, false);

public static Object _J53/* .getDocumentBase */(Pair Args){
  return (((jsint.Procedure)_J53/* .getDocumentBase */).apply(Args));}
static Object _J53/* .getDocumentBase */ = new JavaMethod("getDocumentBase", null, false);


static boolean [][] _moreApplicable__J54/* java.awt.Toolkit.getDefaultToolkit */ = new boolean[][]{ 
{true}

};

public static Object _J54/* java.awt.Toolkit.getDefaultToolkit */(Pair args){
int numargs = args.length();
Object 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J54/* java.awt.Toolkit.getDefaultToolkit */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return java.awt.Toolkit.getDefaultToolkit(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J54/* java.awt.Toolkit.getDefaultToolkit */ = new JLIB( JAVA_LIT, 54/* java.awt.Toolkit.getDefaultToolkit*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J55/* java.awt.MediaTracker. */ = new boolean[][]{ 
{true}

};

public static java.awt.MediaTracker _J55/* java.awt.MediaTracker. */(Pair args){
int numargs = args.length();
java.awt.MediaTracker 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J55/* java.awt.MediaTracker. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.awt.Component))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.MediaTracker(
            (java.awt.Component) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J55/* java.awt.MediaTracker. */ = new JLIB( JAVA_LIT, 55/* java.awt.MediaTracker.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J56/* java.awt.Canvas. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.Canvas _J56/* java.awt.Canvas. */(Pair args){
int numargs = args.length();
java.awt.Canvas 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J56/* java.awt.Canvas. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J56/* java.awt.Canvas. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.awt.GraphicsConfiguration))) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Canvas(); 
    case 1: return new java.awt.Canvas(
            (java.awt.GraphicsConfiguration) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J56/* java.awt.Canvas. */ = new JLIB( JAVA_LIT, 56/* java.awt.Canvas.*/, Pair.EMPTY);

public static Object _J57/* .addWindowListener */(Pair Args){
  return (((jsint.Procedure)_J57/* .addWindowListener */).apply(Args));}
static Object _J57/* .addWindowListener */ = new JavaMethod("addWindowListener", null, false);


static boolean [][] _moreApplicable__J58/* jsint.Listener11. */ = new boolean[][]{ 
{true}

};

public static jsint.Listener11 _J58/* jsint.Listener11. */(Pair args){
int numargs = args.length();
jsint.Listener11 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J58/* jsint.Listener11. */[ 0][b]))
        &&
       ((args.nth(0) instanceof jsint.Procedure))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new jsint.Listener11(
            (jsint.Procedure) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J58/* jsint.Listener11. */ = new JLIB( JAVA_LIT, 58/* jsint.Listener11.*/, Pair.EMPTY);

public static Object _J59/* .getID */(Pair Args){
  return (((jsint.Procedure)_J59/* .getID */).apply(Args));}
static Object _J59/* .getID */ = new JavaMethod("getID", null, false);

public static java.lang.Integer _J60/* java.awt.event.WindowEvent.WINDOW_CLOSING$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.event.WindowEvent.WINDOW_CLOSING);

                  else {System.out.println("too many args in call to static field" + "java.awt.event.WindowEvent.WINDOW_CLOSING");
                        return null;} }


static Object _J60/* java.awt.event.WindowEvent.WINDOW_CLOSING$ */ = new JLIB( JAVA_LIT, 60/* java.awt.event.WindowEvent.WINDOW_CLOSING$*/, Pair.EMPTY);

public static Object _J61/* .hide */(Pair Args){
  return (((jsint.Procedure)_J61/* .hide */).apply(Args));}
static Object _J61/* .hide */ = new JavaMethod("hide", null, false);

public static Object _J62/* .setLayout */(Pair Args){
  return (((jsint.Procedure)_J62/* .setLayout */).apply(Args));}
static Object _J62/* .setLayout */ = new JavaMethod("setLayout", null, false);


static boolean [][] _moreApplicable__J63/* java.awt.GridLayout. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static java.awt.GridLayout _J63/* java.awt.GridLayout. */(Pair args){
int numargs = args.length();
java.awt.GridLayout 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 4)
        &&
       ((b== -1) || (_moreApplicable__J63/* java.awt.GridLayout. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer) &&
        (args.nth(3) instanceof java.lang.Integer))) 
       { b = 0;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J63/* java.awt.GridLayout. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 1;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J63/* java.awt.GridLayout. */[ 2][b]))
        &&
       (true)) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.GridLayout(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()),
            (((Integer) (args.nth(3))).intValue()) ); 
    case 1: return new java.awt.GridLayout(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()) ); 
    case 2: return new java.awt.GridLayout(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J63/* java.awt.GridLayout. */ = new JLIB( JAVA_LIT, 63/* java.awt.GridLayout.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J64/* java.awt.Frame. */ = new boolean[][]{ 
{true,false,false,false},
{false,true,false,false},
{false,false,true,false},
{false,false,false,true}

};

public static java.awt.Frame _J64/* java.awt.Frame. */(Pair args){
int numargs = args.length();
java.awt.Frame 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J64/* java.awt.Frame. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.awt.GraphicsConfiguration))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J64/* java.awt.Frame. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 1;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J64/* java.awt.Frame. */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.awt.GraphicsConfiguration))) 
       { b = 2;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J64/* java.awt.Frame. */[ 3][b]))
        &&
       (true)) 
       { b = 3;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Frame(
            (java.lang.String) args.nth(0),
            (java.awt.GraphicsConfiguration) args.nth(1) ); 
    case 1: return new java.awt.Frame(
            (java.lang.String) args.nth(0) ); 
    case 2: return new java.awt.Frame(
            (java.awt.GraphicsConfiguration) args.nth(0) ); 
    case 3: return new java.awt.Frame(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J64/* java.awt.Frame. */ = new JLIB( JAVA_LIT, 64/* java.awt.Frame.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J65/* java.awt.CheckboxGroup. */ = new boolean[][]{ 
{true}

};

public static java.awt.CheckboxGroup _J65/* java.awt.CheckboxGroup. */(Pair args){
int numargs = args.length();
java.awt.CheckboxGroup 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J65/* java.awt.CheckboxGroup. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.CheckboxGroup(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J65/* java.awt.CheckboxGroup. */ = new JLIB( JAVA_LIT, 65/* java.awt.CheckboxGroup.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J66/* java.awt.CheckboxMenuItem. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static java.awt.CheckboxMenuItem _J66/* java.awt.CheckboxMenuItem. */(Pair args){
int numargs = args.length();
java.awt.CheckboxMenuItem 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J66/* java.awt.CheckboxMenuItem. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Boolean))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J66/* java.awt.CheckboxMenuItem. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 1;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J66/* java.awt.CheckboxMenuItem. */[ 2][b]))
        &&
       (true)) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.CheckboxMenuItem(
            (java.lang.String) args.nth(0),
            (((Boolean) (args.nth(1))).booleanValue()) ); 
    case 1: return new java.awt.CheckboxMenuItem(
            (java.lang.String) args.nth(0) ); 
    case 2: return new java.awt.CheckboxMenuItem(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J66/* java.awt.CheckboxMenuItem. */ = new JLIB( JAVA_LIT, 66/* java.awt.CheckboxMenuItem.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J67/* java.awt.MenuItem. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static java.awt.MenuItem _J67/* java.awt.MenuItem. */(Pair args){
int numargs = args.length();
java.awt.MenuItem 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J67/* java.awt.MenuItem. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.awt.MenuShortcut))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J67/* java.awt.MenuItem. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 1;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J67/* java.awt.MenuItem. */[ 2][b]))
        &&
       (true)) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.MenuItem(
            (java.lang.String) args.nth(0),
            (java.awt.MenuShortcut) args.nth(1) ); 
    case 1: return new java.awt.MenuItem(
            (java.lang.String) args.nth(0) ); 
    case 2: return new java.awt.MenuItem(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J67/* java.awt.MenuItem. */ = new JLIB( JAVA_LIT, 67/* java.awt.MenuItem.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J68/* java.awt.Menu. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static java.awt.Menu _J68/* java.awt.Menu. */(Pair args){
int numargs = args.length();
java.awt.Menu 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J68/* java.awt.Menu. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Boolean))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J68/* java.awt.Menu. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 1;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J68/* java.awt.Menu. */[ 2][b]))
        &&
       (true)) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Menu(
            (java.lang.String) args.nth(0),
            (((Boolean) (args.nth(1))).booleanValue()) ); 
    case 1: return new java.awt.Menu(
            (java.lang.String) args.nth(0) ); 
    case 2: return new java.awt.Menu(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J68/* java.awt.Menu. */ = new JLIB( JAVA_LIT, 68/* java.awt.Menu.*/, Pair.EMPTY);

public static Object _J69/* String.class */(Pair Args){
  return (((jsint.Procedure)_J69/* String.class */).apply(Args));}
static Object _J69/* String.class */ = String.class;


static boolean [][] _moreApplicable__J70/* java.awt.MenuBar. */ = new boolean[][]{ 
{true}

};

public static java.awt.MenuBar _J70/* java.awt.MenuBar. */(Pair args){
int numargs = args.length();
java.awt.MenuBar 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J70/* java.awt.MenuBar. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.MenuBar(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J70/* java.awt.MenuBar. */ = new JLIB( JAVA_LIT, 70/* java.awt.MenuBar.*/, Pair.EMPTY);

public static Object _J71/* .getLabel */(Pair Args){
  return (((jsint.Procedure)_J71/* .getLabel */).apply(Args));}
static Object _J71/* .getLabel */ = new JavaMethod("getLabel", null, false);

public static Object _J72/* .getSelectedItem */(Pair Args){
  return (((jsint.Procedure)_J72/* .getSelectedItem */).apply(Args));}
static Object _J72/* .getSelectedItem */ = new JavaMethod("getSelectedItem", null, false);

public static Object _J73/* java.awt.List.class */(Pair Args){
  return (((jsint.Procedure)_J73/* java.awt.List.class */).apply(Args));}
static Object _J73/* java.awt.List.class */ = java.awt.List.class;

public static Object _J74/* java.awt.Label.class */(Pair Args){
  return (((jsint.Procedure)_J74/* java.awt.Label.class */).apply(Args));}
static Object _J74/* java.awt.Label.class */ = java.awt.Label.class;

public static Object _J75/* .getText */(Pair Args){
  return (((jsint.Procedure)_J75/* .getText */).apply(Args));}
static Object _J75/* .getText */ = new JavaMethod("getText", null, false);

public static Object _J76/* java.awt.TextComponent.class */(Pair Args){
  return (((jsint.Procedure)_J76/* java.awt.TextComponent.class */).apply(Args));}
static Object _J76/* java.awt.TextComponent.class */ = java.awt.TextComponent.class;

public static Object _J77/* .setLabel */(Pair Args){
  return (((jsint.Procedure)_J77/* .setLabel */).apply(Args));}
static Object _J77/* .setLabel */ = new JavaMethod("setLabel", null, false);

public static Object _J78/* .toString */(Pair Args){
  return (((jsint.Procedure)_J78/* .toString */).apply(Args));}
static Object _J78/* .toString */ = new JavaMethod("toString", null, false);

public static Object _J79/* .addItem */(Pair Args){
  return (((jsint.Procedure)_J79/* .addItem */).apply(Args));}
static Object _J79/* .addItem */ = new JavaMethod("addItem", null, false);

public static Object _J80/* .setText */(Pair Args){
  return (((jsint.Procedure)_J80/* .setText */).apply(Args));}
static Object _J80/* .setText */ = new JavaMethod("setText", null, false);


static boolean [][] _moreApplicable__J81/* jsint.U.stringify */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static Object _J81/* jsint.U.stringify */(Pair args){
int numargs = args.length();
Object 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 3)
        &&
       ((b== -1) || (_moreApplicable__J81/* jsint.U.stringify */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Object) &&
        (args.nth(1) instanceof java.lang.Boolean) &&
        (args.nth(2) instanceof java.lang.StringBuffer))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J81/* jsint.U.stringify */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Object))) 
       { b = 1;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J81/* jsint.U.stringify */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.lang.Object) &&
        (args.nth(1) instanceof java.lang.Boolean))) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return jsint.U.stringify(
            (java.lang.Object) args.nth(0),
            (((Boolean) (args.nth(1))).booleanValue()),
            (java.lang.StringBuffer) args.nth(2) ); 
    case 1: return jsint.U.stringify(
            (java.lang.Object) args.nth(0) ); 
    case 2: return jsint.U.stringify(
            (java.lang.Object) args.nth(0),
            (((Boolean) (args.nth(1))).booleanValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J81/* jsint.U.stringify */ = new JLIB( JAVA_LIT, 81/* jsint.U.stringify*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J82/* jsint.InputPort. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static jsint.InputPort _J82/* jsint.InputPort. */(Pair args){
int numargs = args.length();
jsint.InputPort 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J82/* jsint.InputPort. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.io.InputStream))) 
       { b = 0;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J82/* jsint.InputPort. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.io.Reader) &&
        (args.nth(1) instanceof java.lang.Boolean))) 
       { b = 1;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J82/* jsint.InputPort. */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.io.Reader))) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new jsint.InputPort(
            (java.io.InputStream) args.nth(0) ); 
    case 1: return new jsint.InputPort(
            (java.io.Reader) args.nth(0),
            (((Boolean) (args.nth(1))).booleanValue()) ); 
    case 2: return new jsint.InputPort(
            (java.io.Reader) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J82/* jsint.InputPort. */ = new JLIB( JAVA_LIT, 82/* jsint.InputPort.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J83/* java.io.StringReader. */ = new boolean[][]{ 
{true}

};

public static java.io.StringReader _J83/* java.io.StringReader. */(Pair args){
int numargs = args.length();
java.io.StringReader 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J83/* java.io.StringReader. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.io.StringReader(
            (java.lang.String) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J83/* java.io.StringReader. */ = new JLIB( JAVA_LIT, 83/* java.io.StringReader.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J84/* java.awt.Panel. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.Panel _J84/* java.awt.Panel. */(Pair args){
int numargs = args.length();
java.awt.Panel 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J84/* java.awt.Panel. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J84/* java.awt.Panel. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.awt.LayoutManager))) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Panel(); 
    case 1: return new java.awt.Panel(
            (java.awt.LayoutManager) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J84/* java.awt.Panel. */ = new JLIB( JAVA_LIT, 84/* java.awt.Panel.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J85/* java.awt.BorderLayout. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.BorderLayout _J85/* java.awt.BorderLayout. */(Pair args){
int numargs = args.length();
java.awt.BorderLayout 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J85/* java.awt.BorderLayout. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J85/* java.awt.BorderLayout. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.BorderLayout(); 
    case 1: return new java.awt.BorderLayout(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J85/* java.awt.BorderLayout. */ = new JLIB( JAVA_LIT, 85/* java.awt.BorderLayout.*/, Pair.EMPTY);

public static Object _J86/* .gridx$ */(Pair Args){
  return (((jsint.Procedure)_J86/* .gridx$ */).apply(Args));}
static Object _J86/* .gridx$ */ = new JavaField("gridx", null);

public static Object _J87/* .gridy$ */(Pair Args){
  return (((jsint.Procedure)_J87/* .gridy$ */).apply(Args));}
static Object _J87/* .gridy$ */ = new JavaField("gridy", null);

public static Object _J88/* .gridwidth$ */(Pair Args){
  return (((jsint.Procedure)_J88/* .gridwidth$ */).apply(Args));}
static Object _J88/* .gridwidth$ */ = new JavaField("gridwidth", null);

public static Object _J89/* .gridheight$ */(Pair Args){
  return (((jsint.Procedure)_J89/* .gridheight$ */).apply(Args));}
static Object _J89/* .gridheight$ */ = new JavaField("gridheight", null);

public static Object _J90/* .fill$ */(Pair Args){
  return (((jsint.Procedure)_J90/* .fill$ */).apply(Args));}
static Object _J90/* .fill$ */ = new JavaField("fill", null);

public static Object _J91/* .ipadx$ */(Pair Args){
  return (((jsint.Procedure)_J91/* .ipadx$ */).apply(Args));}
static Object _J91/* .ipadx$ */ = new JavaField("ipadx", null);

public static Object _J92/* .ipady$ */(Pair Args){
  return (((jsint.Procedure)_J92/* .ipady$ */).apply(Args));}
static Object _J92/* .ipady$ */ = new JavaField("ipady", null);

public static Object _J93/* .insets$ */(Pair Args){
  return (((jsint.Procedure)_J93/* .insets$ */).apply(Args));}
static Object _J93/* .insets$ */ = new JavaField("insets", null);

public static Object _J94/* .anchor$ */(Pair Args){
  return (((jsint.Procedure)_J94/* .anchor$ */).apply(Args));}
static Object _J94/* .anchor$ */ = new JavaField("anchor", null);

public static Object _J95/* .weightx$ */(Pair Args){
  return (((jsint.Procedure)_J95/* .weightx$ */).apply(Args));}
static Object _J95/* .weightx$ */ = new JavaField("weightx", null);

public static Object _J96/* .weighty$ */(Pair Args){
  return (((jsint.Procedure)_J96/* .weighty$ */).apply(Args));}
static Object _J96/* .weighty$ */ = new JavaField("weighty", null);

public static Object _J97/* .setConstraints */(Pair Args){
  return (((jsint.Procedure)_J97/* .setConstraints */).apply(Args));}
static Object _J97/* .setConstraints */ = new JavaMethod("setConstraints", null, false);

public static Object _J98/* jsint.Symbol.class */(Pair Args){
  return (((jsint.Procedure)_J98/* jsint.Symbol.class */).apply(Args));}
static Object _J98/* jsint.Symbol.class */ = jsint.Symbol.class;

public static java.lang.Integer _J99/* java.awt.GridBagConstraints.BOTH$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.BOTH);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.BOTH");
                        return null;} }


static Object _J99/* java.awt.GridBagConstraints.BOTH$ */ = new JLIB( JAVA_LIT, 99/* java.awt.GridBagConstraints.BOTH$*/, Pair.EMPTY);

public static java.lang.Integer _J100/* java.awt.GridBagConstraints.NONE$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.NONE);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.NONE");
                        return null;} }


static Object _J100/* java.awt.GridBagConstraints.NONE$ */ = new JLIB( JAVA_LIT, 100/* java.awt.GridBagConstraints.NONE$*/, Pair.EMPTY);

public static java.lang.Integer _J101/* java.awt.GridBagConstraints.HORIZONTAL$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.HORIZONTAL);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.HORIZONTAL");
                        return null;} }


static Object _J101/* java.awt.GridBagConstraints.HORIZONTAL$ */ = new JLIB( JAVA_LIT, 101/* java.awt.GridBagConstraints.HORIZONTAL$*/, Pair.EMPTY);

public static java.lang.Integer _J102/* java.awt.GridBagConstraints.VERTICAL$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.VERTICAL);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.VERTICAL");
                        return null;} }


static Object _J102/* java.awt.GridBagConstraints.VERTICAL$ */ = new JLIB( JAVA_LIT, 102/* java.awt.GridBagConstraints.VERTICAL$*/, Pair.EMPTY);

public static java.lang.Integer _J103/* java.awt.GridBagConstraints.NORTH$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.NORTH);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.NORTH");
                        return null;} }


static Object _J103/* java.awt.GridBagConstraints.NORTH$ */ = new JLIB( JAVA_LIT, 103/* java.awt.GridBagConstraints.NORTH$*/, Pair.EMPTY);

public static java.lang.Integer _J104/* java.awt.GridBagConstraints.NORTHEAST$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.NORTHEAST);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.NORTHEAST");
                        return null;} }


static Object _J104/* java.awt.GridBagConstraints.NORTHEAST$ */ = new JLIB( JAVA_LIT, 104/* java.awt.GridBagConstraints.NORTHEAST$*/, Pair.EMPTY);

public static java.lang.Integer _J105/* java.awt.GridBagConstraints.NORTHWEST$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.NORTHWEST);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.NORTHWEST");
                        return null;} }


static Object _J105/* java.awt.GridBagConstraints.NORTHWEST$ */ = new JLIB( JAVA_LIT, 105/* java.awt.GridBagConstraints.NORTHWEST$*/, Pair.EMPTY);

public static java.lang.Integer _J106/* java.awt.GridBagConstraints.SOUTH$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.SOUTH);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.SOUTH");
                        return null;} }


static Object _J106/* java.awt.GridBagConstraints.SOUTH$ */ = new JLIB( JAVA_LIT, 106/* java.awt.GridBagConstraints.SOUTH$*/, Pair.EMPTY);

public static java.lang.Integer _J107/* java.awt.GridBagConstraints.SOUTHEAST$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.SOUTHEAST);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.SOUTHEAST");
                        return null;} }


static Object _J107/* java.awt.GridBagConstraints.SOUTHEAST$ */ = new JLIB( JAVA_LIT, 107/* java.awt.GridBagConstraints.SOUTHEAST$*/, Pair.EMPTY);

public static java.lang.Integer _J108/* java.awt.GridBagConstraints.SOUTHWEST$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.SOUTHWEST);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.SOUTHWEST");
                        return null;} }


static Object _J108/* java.awt.GridBagConstraints.SOUTHWEST$ */ = new JLIB( JAVA_LIT, 108/* java.awt.GridBagConstraints.SOUTHWEST$*/, Pair.EMPTY);

public static java.lang.Integer _J109/* java.awt.GridBagConstraints.CENTER$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.CENTER);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.CENTER");
                        return null;} }


static Object _J109/* java.awt.GridBagConstraints.CENTER$ */ = new JLIB( JAVA_LIT, 109/* java.awt.GridBagConstraints.CENTER$*/, Pair.EMPTY);

public static java.lang.Integer _J110/* java.awt.GridBagConstraints.EAST$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.EAST);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.EAST");
                        return null;} }


static Object _J110/* java.awt.GridBagConstraints.EAST$ */ = new JLIB( JAVA_LIT, 110/* java.awt.GridBagConstraints.EAST$*/, Pair.EMPTY);

public static java.lang.Integer _J111/* java.awt.GridBagConstraints.WEST$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.WEST);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.WEST");
                        return null;} }


static Object _J111/* java.awt.GridBagConstraints.WEST$ */ = new JLIB( JAVA_LIT, 111/* java.awt.GridBagConstraints.WEST$*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J112/* java.awt.GridBagConstraints. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.GridBagConstraints _J112/* java.awt.GridBagConstraints. */(Pair args){
int numargs = args.length();
java.awt.GridBagConstraints 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J112/* java.awt.GridBagConstraints. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    if ((numargs== 11)
        &&
       ((b== -1) || (_moreApplicable__J112/* java.awt.GridBagConstraints. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer) &&
        (args.nth(3) instanceof java.lang.Integer) &&
        (args.nth(4) instanceof java.lang.Double) &&
        (args.nth(5) instanceof java.lang.Double) &&
        (args.nth(6) instanceof java.lang.Integer) &&
        (args.nth(7) instanceof java.lang.Integer) &&
        (args.nth(8) instanceof java.awt.Insets) &&
        (args.nth(9) instanceof java.lang.Integer) &&
        (args.nth(10) instanceof java.lang.Integer))) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.GridBagConstraints(); 
    case 1: return new java.awt.GridBagConstraints(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()),
            (((Integer) (args.nth(3))).intValue()),
            (((Double) (args.nth(4))).doubleValue()),
            (((Double) (args.nth(5))).doubleValue()),
            (((Integer) (args.nth(6))).intValue()),
            (((Integer) (args.nth(7))).intValue()),
            (java.awt.Insets) args.nth(8),
            (((Integer) (args.nth(9))).intValue()),
            (((Integer) (args.nth(10))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J112/* java.awt.GridBagConstraints. */ = new JLIB( JAVA_LIT, 112/* java.awt.GridBagConstraints.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J113/* java.awt.GridBagLayout. */ = new boolean[][]{ 
{true}

};

public static java.awt.GridBagLayout _J113/* java.awt.GridBagLayout. */(Pair args){
int numargs = args.length();
java.awt.GridBagLayout 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J113/* java.awt.GridBagLayout. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.GridBagLayout(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J113/* java.awt.GridBagLayout. */ = new JLIB( JAVA_LIT, 113/* java.awt.GridBagLayout.*/, Pair.EMPTY);

public static java.lang.Integer _J114/* java.awt.GridBagConstraints.RELATIVE$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.GridBagConstraints.RELATIVE);

                  else {System.out.println("too many args in call to static field" + "java.awt.GridBagConstraints.RELATIVE");
                        return null;} }


static Object _J114/* java.awt.GridBagConstraints.RELATIVE$ */ = new JLIB( JAVA_LIT, 114/* java.awt.GridBagConstraints.RELATIVE$*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J115/* java.awt.Insets. */ = new boolean[][]{ 
{true}

};

public static java.awt.Insets _J115/* java.awt.Insets. */(Pair args){
int numargs = args.length();
java.awt.Insets 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 4)
        &&
       ((b== -1) || (_moreApplicable__J115/* java.awt.Insets. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer) &&
        (args.nth(3) instanceof java.lang.Integer))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Insets(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()),
            (((Integer) (args.nth(3))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J115/* java.awt.Insets. */ = new JLIB( JAVA_LIT, 115/* java.awt.Insets.*/, Pair.EMPTY);

public static Object _J116/* .doubleValue */(Pair Args){
  return (((jsint.Procedure)_J116/* .doubleValue */).apply(Args));}
static Object _J116/* .doubleValue */ = new JavaMethod("doubleValue", null, false);


static boolean [][] _moreApplicable__J117/* java.awt.CardLayout. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.CardLayout _J117/* java.awt.CardLayout. */(Pair args){
int numargs = args.length();
java.awt.CardLayout 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J117/* java.awt.CardLayout. */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J117/* java.awt.CardLayout. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.CardLayout(); 
    case 1: return new java.awt.CardLayout(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J117/* java.awt.CardLayout. */ = new JLIB( JAVA_LIT, 117/* java.awt.CardLayout.*/, Pair.EMPTY);

public static Object _J118/* .first */(Pair Args){
  return (((jsint.Procedure)_J118/* .first */).apply(Args));}
static Object _J118/* .first */ = new JavaMethod("first", null, false);

public static Object _J119/* .getLayout */(Pair Args){
  return (((jsint.Procedure)_J119/* .getLayout */).apply(Args));}
static Object _J119/* .getLayout */ = new JavaMethod("getLayout", null, false);

public static Object _J120/* .last */(Pair Args){
  return (((jsint.Procedure)_J120/* .last */).apply(Args));}
static Object _J120/* .last */ = new JavaMethod("last", null, false);

public static Object _J121/* .next */(Pair Args){
  return (((jsint.Procedure)_J121/* .next */).apply(Args));}
static Object _J121/* .next */ = new JavaMethod("next", null, false);

public static Object _J122/* .previous */(Pair Args){
  return (((jsint.Procedure)_J122/* .previous */).apply(Args));}
static Object _J122/* .previous */ = new JavaMethod("previous", null, false);

public static Object _J123/* .show */(Pair Args){
  return (((jsint.Procedure)_J123/* .show */).apply(Args));}
static Object _J123/* .show */ = new JavaMethod("show", null, false);


static boolean [][] _moreApplicable__J124/* java.awt.Font. */ = new boolean[][]{ 
{true,false},
{false,true}

};

public static java.awt.Font _J124/* java.awt.Font. */(Pair args){
int numargs = args.length();
java.awt.Font 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 3)
        &&
       ((b== -1) || (_moreApplicable__J124/* java.awt.Font. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.String) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J124/* java.awt.Font. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.util.Map))) 
       { b = 1;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Font(
            (java.lang.String) args.nth(0),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()) ); 
    case 1: return new java.awt.Font(
            (java.util.Map) args.nth(0) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J124/* java.awt.Font. */ = new JLIB( JAVA_LIT, 124/* java.awt.Font.*/, Pair.EMPTY);

public static java.lang.Integer _J125/* java.awt.Font.PLAIN$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.Font.PLAIN);

                  else {System.out.println("too many args in call to static field" + "java.awt.Font.PLAIN");
                        return null;} }


static Object _J125/* java.awt.Font.PLAIN$ */ = new JLIB( JAVA_LIT, 125/* java.awt.Font.PLAIN$*/, Pair.EMPTY);

public static java.lang.Integer _J126/* java.awt.Font.BOLD$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.Font.BOLD);

                  else {System.out.println("too many args in call to static field" + "java.awt.Font.BOLD");
                        return null;} }


static Object _J126/* java.awt.Font.BOLD$ */ = new JLIB( JAVA_LIT, 126/* java.awt.Font.BOLD$*/, Pair.EMPTY);

public static java.lang.Integer _J127/* java.awt.Font.ITALIC$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Integer( java.awt.Font.ITALIC);

                  else {System.out.println("too many args in call to static field" + "java.awt.Font.ITALIC");
                        return null;} }


static Object _J127/* java.awt.Font.ITALIC$ */ = new JLIB( JAVA_LIT, 127/* java.awt.Font.ITALIC$*/, Pair.EMPTY);

public static java.awt.Color _J128/* java.awt.Color.white$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.white;
    else System.out.println("too many args in call to static field" +"java.awt.Color.white"); 
    return null; }


static Object _J128/* java.awt.Color.white$ */ = new JLIB( JAVA_LIT, 128/* java.awt.Color.white$*/, Pair.EMPTY);

public static java.awt.Color _J129/* java.awt.Color.lightGray$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.lightGray;
    else System.out.println("too many args in call to static field" +"java.awt.Color.lightGray"); 
    return null; }


static Object _J129/* java.awt.Color.lightGray$ */ = new JLIB( JAVA_LIT, 129/* java.awt.Color.lightGray$*/, Pair.EMPTY);

public static java.awt.Color _J130/* java.awt.Color.gray$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.gray;
    else System.out.println("too many args in call to static field" +"java.awt.Color.gray"); 
    return null; }


static Object _J130/* java.awt.Color.gray$ */ = new JLIB( JAVA_LIT, 130/* java.awt.Color.gray$*/, Pair.EMPTY);

public static java.awt.Color _J131/* java.awt.Color.darkGray$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.darkGray;
    else System.out.println("too many args in call to static field" +"java.awt.Color.darkGray"); 
    return null; }


static Object _J131/* java.awt.Color.darkGray$ */ = new JLIB( JAVA_LIT, 131/* java.awt.Color.darkGray$*/, Pair.EMPTY);

public static java.awt.Color _J132/* java.awt.Color.black$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.black;
    else System.out.println("too many args in call to static field" +"java.awt.Color.black"); 
    return null; }


static Object _J132/* java.awt.Color.black$ */ = new JLIB( JAVA_LIT, 132/* java.awt.Color.black$*/, Pair.EMPTY);

public static java.awt.Color _J133/* java.awt.Color.red$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.red;
    else System.out.println("too many args in call to static field" +"java.awt.Color.red"); 
    return null; }


static Object _J133/* java.awt.Color.red$ */ = new JLIB( JAVA_LIT, 133/* java.awt.Color.red$*/, Pair.EMPTY);

public static java.awt.Color _J134/* java.awt.Color.pink$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.pink;
    else System.out.println("too many args in call to static field" +"java.awt.Color.pink"); 
    return null; }


static Object _J134/* java.awt.Color.pink$ */ = new JLIB( JAVA_LIT, 134/* java.awt.Color.pink$*/, Pair.EMPTY);

public static java.awt.Color _J135/* java.awt.Color.orange$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.orange;
    else System.out.println("too many args in call to static field" +"java.awt.Color.orange"); 
    return null; }


static Object _J135/* java.awt.Color.orange$ */ = new JLIB( JAVA_LIT, 135/* java.awt.Color.orange$*/, Pair.EMPTY);

public static java.awt.Color _J136/* java.awt.Color.yellow$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.yellow;
    else System.out.println("too many args in call to static field" +"java.awt.Color.yellow"); 
    return null; }


static Object _J136/* java.awt.Color.yellow$ */ = new JLIB( JAVA_LIT, 136/* java.awt.Color.yellow$*/, Pair.EMPTY);

public static java.awt.Color _J137/* java.awt.Color.green$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.green;
    else System.out.println("too many args in call to static field" +"java.awt.Color.green"); 
    return null; }


static Object _J137/* java.awt.Color.green$ */ = new JLIB( JAVA_LIT, 137/* java.awt.Color.green$*/, Pair.EMPTY);

public static java.awt.Color _J138/* java.awt.Color.magenta$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.magenta;
    else System.out.println("too many args in call to static field" +"java.awt.Color.magenta"); 
    return null; }


static Object _J138/* java.awt.Color.magenta$ */ = new JLIB( JAVA_LIT, 138/* java.awt.Color.magenta$*/, Pair.EMPTY);

public static java.awt.Color _J139/* java.awt.Color.cyan$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.cyan;
    else System.out.println("too many args in call to static field" +"java.awt.Color.cyan"); 
    return null; }


static Object _J139/* java.awt.Color.cyan$ */ = new JLIB( JAVA_LIT, 139/* java.awt.Color.cyan$*/, Pair.EMPTY);

public static java.awt.Color _J140/* java.awt.Color.blue$ */( Pair Args ){
    if (Args.length() == 0) return java.awt.Color.blue;
    else System.out.println("too many args in call to static field" +"java.awt.Color.blue"); 
    return null; }


static Object _J140/* java.awt.Color.blue$ */ = new JLIB( JAVA_LIT, 140/* java.awt.Color.blue$*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J141/* java.awt.Color. */ = new boolean[][]{ 
{true,false,false,false,false,false,false},
{false,true,false,false,false,false,false},
{false,false,true,false,false,false,false},
{false,false,false,true,false,false,false},
{false,false,false,false,true,false,false},
{false,false,false,false,false,true,false},
{false,false,false,false,false,false,true}

};

public static java.awt.Color _J141/* java.awt.Color. */(Pair args){
int numargs = args.length();
java.awt.Color 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 4)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Float) &&
        (args.nth(1) instanceof java.lang.Float) &&
        (args.nth(2) instanceof java.lang.Float) &&
        (args.nth(3) instanceof java.lang.Float))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer))) 
       { b = 1;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Boolean))) 
       { b = 2;}
   
    if ((numargs== 3)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 3][b]))
        &&
       ((args.nth(0) instanceof java.lang.Float) &&
        (args.nth(1) instanceof java.lang.Float) &&
        (args.nth(2) instanceof java.lang.Float))) 
       { b = 3;}
   
    if ((numargs== 3)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 4][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer))) 
       { b = 4;}
   
    if ((numargs== 3)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 5][b]))
        &&
       ((args.nth(0) instanceof java.awt.color.ColorSpace) &&
        (args.nth(1) instanceof float[]) &&
        (args.nth(2) instanceof java.lang.Float))) 
       { b = 5;}
   
    if ((numargs== 4)
        &&
       ((b== -1) || (_moreApplicable__J141/* java.awt.Color. */[ 6][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer) &&
        (args.nth(2) instanceof java.lang.Integer) &&
        (args.nth(3) instanceof java.lang.Integer))) 
       { b = 6;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Color(
            (((Float) (args.nth(0))).floatValue()),
            (((Float) (args.nth(1))).floatValue()),
            (((Float) (args.nth(2))).floatValue()),
            (((Float) (args.nth(3))).floatValue()) ); 
    case 1: return new java.awt.Color(
            (((Integer) (args.nth(0))).intValue()) ); 
    case 2: return new java.awt.Color(
            (((Integer) (args.nth(0))).intValue()),
            (((Boolean) (args.nth(1))).booleanValue()) ); 
    case 3: return new java.awt.Color(
            (((Float) (args.nth(0))).floatValue()),
            (((Float) (args.nth(1))).floatValue()),
            (((Float) (args.nth(2))).floatValue()) ); 
    case 4: return new java.awt.Color(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()) ); 
    case 5: return new java.awt.Color(
            (java.awt.color.ColorSpace) args.nth(0),
            (float[]) args.nth(1),
            (((Float) (args.nth(2))).floatValue()) ); 
    case 6: return new java.awt.Color(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()),
            (((Integer) (args.nth(2))).intValue()),
            (((Integer) (args.nth(3))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J141/* java.awt.Color. */ = new JLIB( JAVA_LIT, 141/* java.awt.Color.*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J142/* java.awt.Dimension. */ = new boolean[][]{ 
{true,false,false},
{false,true,false},
{false,false,true}

};

public static java.awt.Dimension _J142/* java.awt.Dimension. */(Pair args){
int numargs = args.length();
java.awt.Dimension 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J142/* java.awt.Dimension. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.awt.Dimension))) 
       { b = 0;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J142/* java.awt.Dimension. */[ 1][b]))
        &&
       (true)) 
       { b = 1;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J142/* java.awt.Dimension. */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Integer))) 
       { b = 2;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.awt.Dimension(
            (java.awt.Dimension) args.nth(0) ); 
    case 1: return new java.awt.Dimension(); 
    case 2: return new java.awt.Dimension(
            (((Integer) (args.nth(0))).intValue()),
            (((Integer) (args.nth(1))).intValue()) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J142/* java.awt.Dimension. */ = new JLIB( JAVA_LIT, 142/* java.awt.Dimension.*/, Pair.EMPTY);

public static Object _J143/* .get */(Pair Args){
  return (((jsint.Procedure)_J143/* .get */).apply(Args));}
static Object _J143/* .get */ = new JavaMethod("get", null, false);

public static Object _J144/* .put */(Pair Args){
  return (((jsint.Procedure)_J144/* .put */).apply(Args));}
static Object _J144/* .put */ = new JavaMethod("put", null, false);


static boolean [][] _moreApplicable__J145/* java.util.Hashtable. */ = new boolean[][]{ 
{true,false,false,false},
{false,true,false,false},
{false,false,true,false},
{false,false,false,true}

};

public static java.util.Hashtable _J145/* java.util.Hashtable. */(Pair args){
int numargs = args.length();
java.util.Hashtable 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J145/* java.util.Hashtable. */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.util.Map))) 
       { b = 0;}
   
    if ((numargs== 1)
        &&
       ((b== -1) || (_moreApplicable__J145/* java.util.Hashtable. */[ 1][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer))) 
       { b = 1;}
   
    if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J145/* java.util.Hashtable. */[ 2][b]))
        &&
       ((args.nth(0) instanceof java.lang.Integer) &&
        (args.nth(1) instanceof java.lang.Float))) 
       { b = 2;}
   
    if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J145/* java.util.Hashtable. */[ 3][b]))
        &&
       (true)) 
       { b = 3;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return new java.util.Hashtable(
            (java.util.Map) args.nth(0) ); 
    case 1: return new java.util.Hashtable(
            (((Integer) (args.nth(0))).intValue()) ); 
    case 2: return new java.util.Hashtable(
            (((Integer) (args.nth(0))).intValue()),
            (((Float) (args.nth(1))).floatValue()) ); 
    case 3: return new java.util.Hashtable(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J145/* java.util.Hashtable. */ = new JLIB( JAVA_LIT, 145/* java.util.Hashtable.*/, Pair.EMPTY);

public static Object _J146/* .pack */(Pair Args){
  return (((jsint.Procedure)_J146/* .pack */).apply(Args));}
static Object _J146/* .pack */ = new JavaMethod("pack", null, false);

public static Object _J147/* .println */(Pair Args){
  return (((jsint.Procedure)_J147/* .println */).apply(Args));}
static Object _J147/* .println */ = new JavaMethod("println", null, false);

public static Object _J148/* .getError */(Pair Args){
  return (((jsint.Procedure)_J148/* .getError */).apply(Args));}
static Object _J148/* .getError */ = new JavaMethod("getError", null, false);


static boolean [][] _moreApplicable__J149/* jsint.Scheme.currentEvaluator */ = new boolean[][]{ 
{true}

};

public static Object _J149/* jsint.Scheme.currentEvaluator */(Pair args){
int numargs = args.length();
Object 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 0)
        &&
       ((b== -1) || (_moreApplicable__J149/* jsint.Scheme.currentEvaluator */[ 0][b]))
        &&
       (true)) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return jsint.Scheme.currentEvaluator(); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J149/* jsint.Scheme.currentEvaluator */ = new JLIB( JAVA_LIT, 149/* jsint.Scheme.currentEvaluator*/, Pair.EMPTY);


static boolean [][] _moreApplicable__J150/* jsint.Procedure.tryCatch */ = new boolean[][]{ 
{true}

};

public static Object _J150/* jsint.Procedure.tryCatch */(Pair args){
int numargs = args.length();
Object 
    tmp=null;  // return type, for methods
    int b= -1; // index of best matching method/constructor

if ((numargs== 2)
        &&
       ((b== -1) || (_moreApplicable__J150/* jsint.Procedure.tryCatch */[ 0][b]))
        &&
       ((args.nth(0) instanceof java.lang.Object) &&
        (args.nth(1) instanceof java.lang.Object))) 
       { b = 0;}
   
    
try {
switch (b) {  
   // jump to the best matching method/constructor
    case 0: return jsint.Procedure.tryCatch(
            (java.lang.Object) args.nth(0),
            (java.lang.Object) args.nth(1) ); 

   default: // error
}
} catch(Exception e) {throw new JschemeThrowable(e);}; 
 return tmp;
}

static Object _J150/* jsint.Procedure.tryCatch */ = new JLIB( JAVA_LIT, 150/* jsint.Procedure.tryCatch*/, Pair.EMPTY);

public static java.lang.Boolean _J151/* jsint.BacktraceException.printJavaTrace$ */( Pair Args ){
                  if (Args.length() == 0) return new java.lang.Boolean( jsint.BacktraceException.printJavaTrace);

                  else if (Args.length() == 1) 
                     return new java.lang.Boolean(jsint.BacktraceException.printJavaTrace 
                     = ((((Boolean)  Args.first).booleanValue()) ));

                  else {System.out.println("too many args in call to static field" + "jsint.BacktraceException.printJavaTrace");
                        return null;} }


static Object _J151/* jsint.BacktraceException.printJavaTrace$ */ = new JLIB( JAVA_LIT, 151/* jsint.BacktraceException.printJavaTrace$*/, Pair.EMPTY);


    //static { new JLIB().init();}
    }
